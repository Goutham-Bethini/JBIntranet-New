@model USPS_Report.Areas.Reports.Models.AssessmentDueByMonth
@using Kendo.Mvc.UI
@{
    ViewBag.Title = "AssessmentsDueByMonth";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3 style="text-align:center;">Accounts need clinical assessments from @Html.DisplayName(Model.firstDate.ToString("MM/dd/yyyy")) to @Html.DisplayName(Model.lastDate.ToString("MM/dd/yyyy"))</h3>
<span id="displayCount" style="display:none;">
    @Html.DisplayFor(t => t.AssessmentsCount, new { id = "disCount" })
</span>
<span id="displayDate" style="display:none;">
    @Html.DisplayFor(t => t.firstDate, new { id = "disDate" })
</span>
@using (Html.BeginForm("AssessmentsDueAttempts", "ClinicalAssessment", FormMethod.Post, new { year = Model.firstDate.Year, month = Model.firstDate.ToString("MMMM"), count = Model.AssessmentsCount }))
{
    <center>
        <div class="table-responsive middle">
            <strong><span id="divTitle"></span></strong>
            <table id="tblAttempt">
                <tr>
                    <td width=200 colspan="2">@Html.HiddenFor(t => t.Account, new { id = "hidAc" })</td>
                </tr>
                <tr>
                    <td width=200 colspan="2">@Html.HiddenFor(t => t.Expires, new { id = "hidExp" })</td>
                </tr>
                <tr>
                    <td width=200 colspan="2">@Html.HiddenFor(t => t.state, new { id = "hidState" })</td>
                <tr>
                    <td width=200 colspan="2">@Html.HiddenFor(t => t.Age, new { id = "hidAge" })</td>
                </tr>
                <tr>
                    <td width=200 colspan="2">@Html.HiddenFor(t => t.Duration, new { id = "hidDur" })</td>
                </tr>
                <tr>
                    <td width=200 colspan="2">@Html.HiddenFor(t => t.HasPullOns, new { id = "hidPullOns" })</td>
                </tr>
                <tr>
                    <td width=200 colspan="2">@Html.HiddenFor(t => t.AssessmentsCount, new { id = "hidCount" })</td>
                </tr>
                <tr>
                    <td width=200 colspan="2">@Html.HiddenFor(t => t.firstDate, new { id = "hidFirstDate" })</td>
                </tr>
                <tr>
                    <td width=200 colspan="2">@Html.HiddenFor(t => t.Clin_Ass_ID, new { id = "hidClinicalId" })</td>
                </tr>
                <tr>
                    <td width=200 colspan="2">@Html.HiddenFor(t => t.isSetToHold, new { id = "hidSetToHold" })</td>
                </tr>
                </tr>
                <tr>
                    <th style="text-align:right;">Account:</th>
                    <td style="text-align:left;width:200px;">
                        <span id="displayAc">
                            @Html.DisplayFor(t => t.Account, new { id = "disAc" })
                        </span>
                    </td>
                </tr>
                <tr>
                    <th style="text-align:right;">Expires:</th>
                    <td>
                        <span id="displayExp">
                            @Html.DisplayFor(t => t.Expires, new { id = "disExp" })
                        </span>
                    </td>
                </tr>
                <tr>
                    <th style="text-align:right;">State:</th>
                    <td>
                        <span id="displayState">
                            @Html.DisplayFor(t => t.state, new { id = "disState" })
                        </span>
                    </td>
                </tr>
                <tr>
                    <th style="text-align:right;">Age:</th>
                    <td>
                        <span id="displayAge">
                            @Html.DisplayFor(t => t.Age, new { id = "disAge" })
                        </span>

                    </td>
                </tr>
                <tr>
                    <th style="text-align:right;">Duration:</th>
                    <td>
                        <span id="displayDuration">
                            @Html.DisplayFor(t => t.Duration, new { id = "disDuration" })
                        </span>
                    </td>
                </tr>
                <tr>
                    <th style="text-align:right;">Has Pull Ons?:</th>
                    <td>
                        <span id="displayPullOns">
                            @Html.DisplayFor(t => t.HasPullOns, new { id = "disPullOns" })
                        </span>
                        <span id="displayClinicalId" style="display: none;">
                            @Html.DisplayFor(t => t.Clin_Ass_ID, new { id = "disClinicalId", style = "display: none;" })
                        </span>
                    </td>
                </tr>
            </table>
            <table id="tblAttempts">
                <tr>
                    <td>@Html.CheckBoxFor(t => t.Attempt1st) <span><strong>1st Attempt</strong></span></td>
                    <td><span id="displayAttempted1stName"><strong>@Html.DisplayFor(t => t.Attempted1stName)</strong></span></td>
                    <td>
                        <span id="displayAttempted1stDate">
                            <strong>
                                @Html.DisplayFor(t => t.Attempted1stDate, new { id = "disAttempted1stDate" })
                            </strong>
                        </span>
                    </td>
                </tr>
                <tr>
                    <td>@Html.CheckBoxFor(t => t.Attempt2nd) <span><strong>2nd Attempt</strong></span></td>
                    <td><span id="displayAttempted2ndName"><strong>@Html.DisplayFor(t => t.Attempted2ndName)</strong></span></td>
                    <td><span id="displayAttempted2ndDate"><strong>@Html.DisplayFor(t => t.Attempted2ndDate)</strong></span></td>
                </tr>
                <tr>
                    <td>@Html.CheckBoxFor(t => t.Attempt3rd) <span><strong>3rd Attempt</strong></span></td>
                </tr>
            </table>
            <br />
            <button id="btnSubmit" class="btn btn-primary btn-large" type="submit">Submit</button>
            <table id="tblValidation">
                <tr>
                    <td style="text-align:center;">
                        @Html.ValidationMessageFor(t => t.Attempt1st, "", new { @class = "redText" })
                    </td>
                </tr>
            </table>
        </div>
    </center>
}
    <center>
        <table>
            <tr>
                <td><a id="ancSendLetter" style="text-decoration:underline;cursor: pointer;">Send Contact Letter</a></td>
                <td width="25px"></td>
                <td><a id="ancHold" style="text-decoration:underline;cursor: pointer;">Click here to hold</a></td>
            </tr>
        </table>
    </center>

        <div class="center">

            @(Html.Kendo().Grid<USPS_Report.Areas.Reports.Models.AssessmentDueByMonthVM>()
                                                                                                                                .Name("Assessment")
                                                                                                                                .Columns(columns =>

                                                                                                                                {
                                                                                                                                    columns.Bound(t => t.Account).Title("Account").HtmlAttributes(new { style = "cursor: pointer;" }).ClientTemplate("<a onclick=showTest()>#=Account#</a>");
                                                                                                                                    columns.Bound(t => t.Expires).Title("Expires").Filterable(false);
                                                                                                                                    columns.Bound(t => t.state).Title("State");
                                                                                                                                    columns.Bound(t => t.Age).Title("Age");
                                                                                                                                    columns.Bound(t => t.Duration).Title("Duration");
                                                                                                                                    columns.Bound(t => t.HasPullOns).Title("Has Pull Ons?");
                                                                                                                                    columns.Bound(t => t.Attempt1st).Title("1st Attempt?");
                                                                                                                                    columns.Bound(t => t.Attempted1stName).Title("1st Attempted By");
                                                                                                                                    columns.Bound(t => t.Attempted1stDate).Title("1st Attempted Date").Format("{0:MM/dd/yyyy}");
                                                                                                                                    columns.Bound(t => t.Attempt2nd).Title("2nd Attempt?");
                                                                                                                                    columns.Bound(t => t.Attempted2ndName).Title("2nd Attempted By");
                                                                                                                                    columns.Bound(t => t.Attempted2ndDate).Title("2nd Attempted Date").Format("{0:MM/dd/yyyy}");
                                                                                                                                    columns.Bound(t => t.Clin_Ass_ID).Title("Clinical Id").HeaderHtmlAttributes(new { style = "display:none;" }).HtmlAttributes(new { style = "display:none;" });
                                                                                                                                })
                                                                                                                                               .ToolBar(tools => tools.Excel())
                                                                                                                                        .Sortable()
                                                                                                                                         .Pageable()
                                                                                                                                             .Filterable(ftb => ftb.Mode(GridFilterMode.Menu))
                                                                                                                                           .Excel(excel => excel
                                                                                                                                                .FileName("AssessmentDue.xlsx")
                                                                                                                                                .AllPages(true)
                                                                                                                                                .Filterable(true)
                                                                                                                                                .ProxyURL(Url.Action("Excel_Export_Save", "ClinicalAssessment"))
                                                                                                                                            )
                                                                                                                                            .HtmlAttributes(new { style = "width:fit-content;" })
                                                                                                                                            .Reorderable(r => r.Columns(true))
                                                                                                                                            .Resizable(r => r.Columns(true))
                                                                                                                                            .ColumnMenu()
                                                                                                                                        .DataSource(dataSource => dataSource
                                                                                                                                            .Ajax()
                                                                                                                                             .PageSize(50)
                                                                                                                                             .ServerOperation(false)
                                                                                                                                            .Model(model => model.Id(p => p.Account))
                                                                                                                                            .Read(read => read.Action("AssessmentsDueByMonthYr", "ClinicalAssessment", new { year = @Request.QueryString["year"], month = @Request.QueryString["month"] }))
                                                                                                                                        )
            )
        </div>


        <script>
            $(function () {
                $("#ancHold").click(function () {
                    
                    if (Number.isInteger(parseInt($("#displayAc").html(), 10))) {
                        if (confirm("Press make sure you sent contact letter, if already sent press ok to proceed...")) {
                            $("#hidAc").val($("#displayAc").html());
                            $("#hidExp").val($("#displayExp").html());
                            $("#hidState").val($("#displayState").html());
                            $("#hidAge").val($("#displayAge").html());
                            $("#hidDur").val($("#displayDuration").html());
                            $("#hidPullOns").val($("#displayPullOns").html());
                            $("#hidCount").val($("#displayCount").html());
                            $("#hidFirstDate").val($("#displayDate").html());
                            $("#hidClinicalId").val($("#displayClinicalId").html());
                            $("#hidSetToHold").val(true);
                            document.forms[0].submit();
                            return false;
                        }
                    }
                    else {
                        $("#hidSetToHold").val(false);
                        alert('Please select account to hold!');
                    }                       
                });
            });
         
            function showTest() {
                document.body.scrollTop = 0; // For Safari
                document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera
                var grid = $("#Assessment").data("kendoGrid");
                var model = grid.dataItem($(event.target).closest("tr"));
                $("#displayAc").html(model.Account);
                $("#displayExp").html(model.Expires);
                $("#displayState").html(model.state);
                $("#displayAge").html(model.Age);
                $("#displayDuration").html(model.Duration);
                $("#displayPullOns").html(model.HasPullOns);
                $('#Attempt1st').prop('checked', model.Attempt1st);
                $("#displayAttempted1stName").html(model.Attempted1stName);
                $("#displayAttempted1stDate").html(model.Attempted1stDate != null ? model.Attempted1stDate.toLocaleDateString('en-US') : null);
                $('#Attempt2nd').prop('checked', model.Attempt2nd);
                $("#displayAttempted2ndName").html(model.Attempted2ndName);
                $("#displayAttempted2ndDate").html(model.Attempted2ndDate != null ? model.Attempted2ndDate.toLocaleDateString('en-US') : null);
                $('#displayClinicalId').html(model.Clin_Ass_ID);
            }
            $('#btnSubmit').click(
                function () {
                    $("#hidAc").val($("#displayAc").html());
                    $("#hidExp").val($("#displayExp").html());
                    $("#hidState").val($("#displayState").html());
                    $("#hidAge").val($("#displayAge").html());
                    $("#hidDur").val($("#displayDuration").html());
                    $("#hidPullOns").val($("#displayPullOns").html());
                    $("#hidCount").val($("#displayCount").html());
                    $("#hidFirstDate").val($("#displayDate").html());
                    $("#hidClinicalId").val($("#displayClinicalId").html());
                    $("#hidSetToHold").val(false);
                });

            document.getElementById("ancSendLetter").onclick = function () {
                if (Number.isInteger(parseInt($("#displayAc").html(), 10)))
                {
                    var newWindow = window.open('http://10.10.1.49/LetterGenerator?account=' + $("#displayAc").html() + '&ddselection=2');

                    //var newWindow = window.open('http://10.10.1.49/TestLetterGenerator2?account=' + $("#displayAc").html() + '&ddselection=2');

                    //var newWindow = window.open('http://10.10.1.49/LetterGenerator');
                }
                else
                    alert('Please select account to send contact letter!');
            };
        </script>

        <style>
            .middle {
                margin: auto;
                width: 900px;
            }
        </style>
