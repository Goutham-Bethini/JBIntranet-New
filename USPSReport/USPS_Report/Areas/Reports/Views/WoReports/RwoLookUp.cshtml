@model USPS_Report.Areas.Reports.Models.RWOLookUPVM
@using Kendo.Mvc.UI
@{
    ViewBag.Title = "RwoLookUp";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<br />
<div id="signupbox" class="rwoContainer">
    <div class="panel panel-primary">
        <div class="panel-heading">
            <div class="panel-title">
                RWO Loop-Up

            </div>
        </div>

        @using (Html.BeginForm("RwoLookUp", "WoReports", FormMethod.Post, new { id = "lookupform" }))
        {
            <br />

            <div class=" row rwoContainer">
                <div class="col-md-3">
                    <label>Start Date </label>
                    @Html.Kendo().DatePicker().Name("StartDate").Value(Model.StartDate).Format("MM/dd/yyyy")
                </div>
                <div class="col-md-3">
                    <label>End Date</label>
                    @Html.Kendo().DatePicker().Name("EndDate").Value(Model.EndDate).Format("MM/dd/yyyy")
                </div>
                <div class="col-md-3">
                    <label>Product Code </label>
                    @Html.TextBoxFor(m => m.ProductCode, new
                   {
                       @class = "roundTextbox" @*style = "width:180px; height = 70px; "*@ })
                </div>
                <div class="col-md-3">
                    <label>Payer Id</label>
                    @Html.TextBoxFor(m => m.PayerId, new { @class = "roundTextbox" })
                </div>

            </div>
                <hr />
                <div class="row rwoContainer">
                    <div class="col-md-3 SmallComboBox">
                        <label>DeliveryTime</label>
                        @(Html.Kendo().ComboBox()
                    .Name("DelTimeComboBox")
                    .DataTextField("DeliveryTime")
                    .DataValueField("TimeID")
                    .BindTo(Model.DeliveryTimeList)
                    .SelectedIndex(0)
                   .Suggest(true)
                        )

                    </div>

                    <div class="col-md-3 SmallComboBox">
                        <label>Active/Inactive</label>

                        @(Html.Kendo().ComboBox()
                         .Name("InactiveAccount")
                        .Filter("contains")
                        .Placeholder("Select Option...")
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .BindTo(new List<SelectListItem>() {
                         new SelectListItem() {
                         Text = "All", Value = "2"
                         },
                         new SelectListItem() {
                         Text = "Active", Value = "0"
                        },
                       new SelectListItem() {
                       Text = "Inactive", Value = "1"
                      },

                     })
                    .SelectedIndex(0)
                    .Suggest(true)
                        )
                    </div>

                    <div class="col-md-3 MediumComboBox">
                        <label>Frequency</label>
                        @(Html.Kendo().ComboBox()
                        .Name("DelFreqComboBox")
                        .DataTextField("freqTitle")
                        .DataValueField("freqComment")
                         .BindTo(Model.FrequencyList)
                         .SelectedIndex(0)
                          .Suggest(true)
                        )

                    </div>

                    <div class="col-md-3 SmallComboBox">
                        <label>Assigned/UnAssigned</label>
                        @(Html.Kendo().ComboBox()
                         .Name("IsAssigned")
                         .Filter("contains")
                         .Placeholder("Select Option...")
                         .DataTextField("Text")
                         .DataValueField("Value")
                        .BindTo(new List<SelectListItem>() {
                          new SelectListItem() {
                           Text = "Both", Value = "2"
                          },
                          new SelectListItem() {
                            Text = "Assigned", Value = "1"
                          },
                          new SelectListItem() {
                           Text = "Unassigned", Value = "0"
                          },

                         })
                         .SelectedIndex(0)
                         .Suggest(true)
                        )
                    </div>

                </div>
                <hr />
                <div class="row rwoContainer">

                    <div class="col-md-4  LargeComboBox">
                        <label>Location</label>
                        @(Html.Kendo().ComboBox()
              .Name("locationComboBox")
              .DataTextField("deliveryLocationName")
              .DataValueField("locationID")
              .BindTo(Model.locationList)
             .SelectedIndex(0)
             .Suggest(true)//Select an item with index 10. Note that the indexes are zero based.
                        )
                    </div>

                    <div class="col-md-3 MediumComboBox ">
                        <label>Method</label>
                        @(Html.Kendo().ComboBox()
                       .Name("MethodComboBox")
                      .DataTextField("MethodName")
                      .DataValueField("MethodID")
                      .BindTo(Model.MethodList)
                      .SelectedIndex(0)
                      .Suggest(true)//Select an item with index 10. Note that the indexes are zero based.
                        )

                    </div>

                    <div class="col-md-3 SmallComboBox">
                        <label>MakeRWOIncomplete</label>

                        @(Html.Kendo().ComboBox()
                        .Name("MakeRWOIncomplete")
                        .Filter("contains")
                        .Placeholder("Select Option...")
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .BindTo(new List<SelectListItem>() {
                         new SelectListItem() {
                           Text = "Both", Value = "2"
                        },
                       new SelectListItem() {
                       Text = "Incomplete", Value = "1"
                       },
                       new SelectListItem() {
                       Text = "Complete", Value = "0"
                      },

                   })
                  .SelectedIndex(1)
                  .Suggest(true)
                        )
                    </div>

                    <div class="col-md-2 SmallComboBox">
                        <label>Holds</label>
                        @(Html.Kendo().ComboBox()
                 .Name("Holds")
                 .Filter("contains")
                 .Placeholder("Select Option...")
                 .DataTextField("Text")
                 .DataValueField("Value")
                 .BindTo(new List<SelectListItem>() {
                  new SelectListItem() {
                    Text = "All", Value = "2"
                 },
                 new SelectListItem() {
                  Text = "Without Holds", Value = "0"
                },
                new SelectListItem() {
                  Text = "With Holds", Value = "1"
               },
            })
            .SelectedIndex(0)
            .Suggest(true)
                        )
                    </div>


                </div>
                <hr />

                <div class="row rwoContainer">


                    <div class="col-md-3 SmallComboBox">
                        <label>ServiceType</label>
                        @(Html.Kendo().ComboBox()
                 .Name("ServiceType")
                 .Filter("contains")
                 .Placeholder("Select Option...")
                 .DataTextField("Text")
                 .DataValueField("Value")
                 .BindTo(new List<SelectListItem>() {
                  new SelectListItem() {
                    Text = "Purchase", Value = "1"
                 },
                 new SelectListItem() {
                  Text = "Cash Sale", Value = "3"
                },
                new SelectListItem() {
                  Text = "Clinical Visit", Value = "79"
               },
                     new SelectListItem() {
                  Text = "Service", Value = "80"
               },
            })
            .SelectedIndex(0)
            .Suggest(true)
                        )
                    </div>

                    <div class="col-md-3">
                        <label>HCPC</label>
                        @Html.TextBoxFor(m => m.HCPC, new
                   {
                       @class = "roundTextbox" @*style = "width:180px; height = 70px; "*@ })
                    </div>


                </div>
                <br />
                <div style="text-align:center">
                    <span class="label" style="font-size:15px; color: red">
                        @Html.CheckBoxFor(m => m.all) Click this check box if you want to ignore the start and end date in your search
                    </span>
                </div>
                <hr />
                <div class="row rwoContainer" style="text-align:center">
                    <button class="btn btn-primary btn-large" type="button" style="width: 300px; margin: 0 auto" id="get">View RWO</button>
                </div>
                <hr />
                <div class="row rwoContainer">
                    @Html.TextBoxFor(m => m.locationId, new { id = "locId", hidden = "true" })
                    @Html.TextBoxFor(m => m.methodId, new { id = "metId", hidden = "true" })
                    @Html.TextBoxFor(m => m.HoldCode, new { id = "HoldId", hidden = "true" })
                    @Html.TextBoxFor(m => m.InactiveORActive, new { id = "InactiveId", hidden = "true" })
                    @Html.TextBoxFor(m => m.delTimeId, new { id = "delTimeId", hidden = "true" })
                    @Html.TextBoxFor(m => m.FreqID, new { id = "freqId", hidden = "true" })
                    @Html.TextBoxFor(m => m.IsAssigned, new { id = "IsAssignedId", hidden = "true" })
                    @Html.TextBoxFor(m => m.makeRwoIncomplete, new { id = "makeRwoIncompleteId", hidden = "true" })
                    @Html.TextBoxFor(m => m.ServiceType, new { id = "ServiceTypeId", hidden = "true" })

                </div>


        }

    </div>


</div>

<hr />



@*<div>
    <div class=" row">
        <div class="col-md-2"></div>


        <hr />
    </div>

        <div>

            <div style="width:95%;margin:0 auto;">
                @(Html.Kendo().Grid<USPS_Report.Areas.Reports.Models.RWOlookUpData>()
        .Name("RWOLookupGrid")
             .Columns(columns =>
             {
                 columns.Bound(t => t.Account).Width(60).Title("Account");
                 columns.Bound(t => t.Last_Name).Width(60).Title("Last Name");
                 columns.Bound(t => t.First_Name).Width(60).Title("First Name");
                 columns.Bound(t => t.ProductCode).Width(60).Title("Product");
                 columns.Bound(t => t.UOM).Width(30).Title("UOM");
                 //columns.Bound(t => t.PerUnitQty).Width(30).Title("PerUnitQty");
                 columns.Bound(t => t.Qty).Width(30).Title("Qty");
                 columns.Bound(t => t.Hold).Width(50).Title("Holds");
                 columns.Bound(t => t.NextRepeatDate).Width(80).Title("NextRepeatDate").Format("{0:MM/dd/yyyy}");
                 columns.Bound(t => t.DeliveryLocationName).Width(110).Title("Location");
                 columns.Bound(t => t.DeliveryMethod).Width(110).Title("Method");
                 columns.Bound(t => t.DeliveryTime).Width(80).Title("Time");
                //columns.Bound(t => t.Procedure_Code).Width(50).Title("HCPC");
                 //columns.Bound(t => t.InActive).Width(20).Title("InActive");
                 //columns.Bound(t => t.ServiceType).Width(40).Title("ServiceType");
                //columns.Bound(t => t.AcceptAssignment).Width(40).Title("assignment");
                 //columns.Bound(t => t.MakeRwoIncomplete).Width(50).Title("Incomplete");

             })
        // .Scrollable()
        .Reorderable(reorderable => reorderable.Columns(true))
        //.Resizable(resizable => resizable.Columns(true))
        //.Pageable()
        //.Filterable()
        //.Sortable()
        .Groupable()
        .ColumnMenu()
        //  .ToolBar(tools => tools.Excel())

        .Resizable(resize => resize.Columns(true))
         .Scrollable()
         .Sortable()

          .Pageable()
         .Filterable()
        .DataSource(dataSource => dataSource
        .Ajax()

         .PageSize(100)
         .Read(read => read.Action("Rwo_LookUp", "WoReports", new { StartDate = Model.StartDate, EndDate = Model.EndDate, HoldCode = Model.HoldCode, ProductCode = Model.ProductCode, PayerId = Model.PayerId, locationId = Model.locationId, MethodId = Model.methodId, InactiveCode = Model.InactiveORActive, DelTimeId = Model.delTimeId, FreqId = Model.FreqID, IsAssigned = Model.IsAssigned, MakeRWOIncomplete = Model.makeRwoIncomplete, ServiceTypeId = Model.ServiceType, HCPC = Model.HCPC }))
             // .Events(events => events.Change("OnGridChange"))
             .Events(ev => ev.Change("OnGridChange"))
            .ServerOperation(true)

             .Model(model =>
             {
                 model.Id(p => p.Account);
             }
             )
            )

                )






            </div>

        </div>
    </div>*@



<div>
    @if (Model.rwoLookUp != null)
    {

        <div class="row ">
            <div class="col-md-2"></div>
            <div class="col-md-8 alert-info" style="text-align:center">
                <h2 style="color:black; width:800px">
                    Total Orders are:
                </h2>
                <div style="text-align:center" ;>
                    <h3 style="color:blue">
                        @Model.rwoLookUp.Take(1).Select(t => t.RecordCount).SingleOrDefault() Records
                        <br />
                        @Model.rwoLookUp.Take(1).Select(t => t.DistinctAccCount).SingleOrDefault() Accounts
                    </h3>
                </div>
                <br />



                @if (Model.rwoLookUp.Take(1).Select(t => t.RecordCount).SingleOrDefault() != null)
                {
                    @*pradeep added all param *@
                    <div class="btn btn-primary btn-large " style="background-color:#428bca"> <strong>  @Html.ActionLink("View Orders", "rwo", "WoReports", new { StartDate = Model.StartDate, EndDate = Model.EndDate, HoldCode = Model.HoldCode, ProductCode = Model.ProductCode, PayerId = Model.PayerId, locationId = Model.locationId, MethodId = Model.methodId, InactiveCode = Model.InactiveORActive, DelTimeId = Model.delTimeId, FreqId = Model.FreqID, IsAssigned = Model.IsAssigned, MakeRWOIncomplete = Model.makeRwoIncomplete, ServiceTypeId = Model.ServiceType, HCPC = Model.HCPC, all = Model.all }, new { @style = "color:white;" }) </strong></div>
                }
                else
                {
                    <div class="btn btn-primary btn-large " style="background-color:#428bca">
                        <strong>
                            @*pradeep added all param*@
                            @Html.ActionLink("View Order", "rwo", "WoReports", new { StartDate = Model.StartDate, EndDate = Model.EndDate, HoldCode = Model.HoldCode, ProductCode = Model.ProductCode, PayerId = Model.PayerId, locationId = Model.locationId, MethodId = Model.methodId, InactiveCode = Model.InactiveORActive, DelTimeId = Model.delTimeId, FreqId = Model.FreqID, IsAssigned = Model.IsAssigned, MakeRWOIncomplete = Model.makeRwoIncomplete, ServiceTypeId = Model.ServiceType, HCPC = Model.HCPC, all = Model.all }, new { @style = "color:white;" })
                        </strong>
                    </div>

                }
                <br />
            </div>
            <div class="col-md-2"></div>
        </div>



    }
</div>
@*<script>

        function refreshData() {
            var grid = $("#RWOLookupGrid").data("kendoGrid");
            grid.dataSource.read();
            grid.refresh();
        }

        function OnGridChange() {
            var grid = $("#RWOLookupGrid").data("kendoGrid");
            var count = grid.dataSource.total();

            $(".totalRecord").html(count + " Records");

        }

        $(document).ready(function () {
            var locationComboBox = $("#locationComboBox").data("kendoComboBox");
            var MethodComboBox = $("#MethodComboBox").data("kendoComboBox");
            var HoldsComboBox = $("#Holds").data("kendoComboBox");
            var InactiveComboBox = $("#InactiveAccount").data("kendoComboBox");
            var DelTimeComboBox = $("#DelTimeComboBox").data("kendoComboBox");
            var DelFreqComboBox = $("#DelFreqComboBox").data("kendoComboBox");
            var IsAssignedComboBox = $("#IsAssigned").data("kendoComboBox");
            var MakeRWOIncompleteComboBox = $("#MakeRWOIncomplete").data("kendoComboBox");
            var ServiceTypeComboBox = $("#ServiceType").data("kendoComboBox");

            MethodComboBox.list.width("auto");
            MethodComboBox.list.css("min-width", "230px");

            locationComboBox.list.width("auto");
            locationComboBox.list.css("min-width", "300px");


            $("#get").click(function () {

                $("#locId").val(locationComboBox.value());
                $("#metId").val(MethodComboBox.value());
                $("#HoldId").val(HoldsComboBox.value());
                $("#InactiveId").val(InactiveComboBox.value());
                $("#delTimeId").val(DelTimeComboBox.value());
                $("#freqId").val(DelFreqComboBox.value());
                $("#IsAssignedId").val(IsAssignedComboBox.value());
                $("#makeRwoIncomplete").val(MakeRWOIncompleteComboBox.value());
                $("#ServiceTypeId").val(ServiceTypeComboBox.value());

            });
        });
    </script>*@

<style>
    .roundTextbox {
        -moz-border-radius: 5px;
        border-radius: 5px;
        border: solid 1px #B2DCF8;
        padding: 5px;
    }

    .LargeComboBox .k-combobox {
        width: 300px;
    }

    .MediumComboBox .k-combobox {
        width: 230px;
    }

    .SmallComboBox .k-combobox {
        width: 130px;
    }

    .rwoContainer {
        width: 95%;
        height: auto;
        margin: 0px auto;
        padding: 5px;
    }


    .k-readonly {
        color: gray;
    }
</style>

<script>
    $(document).on('click', '#get', function ()
    {
        var sd = $("#StartDate").val();
        var ed = $("#EndDate").val();
        var cb = document.getElementById("all").checked;
        if (cb == false && (sd == "" || ed == ""))
        {
            alert('Please choose the Start and End Date or check the below Checkbox');
            $("#all").focus();
        }
        else
        {
            if (cb == true)
            {
                alert('The Checkbox is checked, so the RWO is displayed irrespective of Dates');
            }
            document.getElementById("lookupform").submit();
        }

    })
</script>