@model USPS_Report.Areas.Reports.Models.GeneratorModel
@using Kendo.Mvc.UI

@{
    ViewBag.Title = "Letter Generator";
    Layout = "~/Areas/Reports/Views/Shared/_noSideBarLayout.cshtml";

    //  Layout = "~/Views/Shared/_Layout.cshtml";
}



@if (Model.OpPermission == true)
{

    <h3 style="color:red">You do not have permission to access this page </h3>
    <p>Click <a href='@(Url.Action("AddPermission", "Generator"))'><b>Here</b></a> to request access.You will be notified via email once a decision has been made. </p>
}

else
{

    <div style="font-family:'Times New Roman';font-size:medium">

        @using (Html.BeginForm("Index", "Generator", FormMethod.Post))
        {@*@Html.ValidationSummary()*@
        @Html.AntiForgeryToken()
        @Html.ValidationMessageFor(m => m.Account) <br />
        @Html.ValidationMessageFor(m => m.Option)<br />



        @Html.ValidationMessageFor(m => m.Option)<br />
        <div class="row">
            <div class="col-md-4">
                <label>Letter Generator:  </label>
                @Html.DropDownListFor(t => t.Option, new List<SelectListItem>

           {
                new SelectListItem { Text = "AOB Generator" , Value = "1"}, // AOB
                new SelectListItem { Text = "Contact Letter" , Value = "2"},  // Contact Letter : 2
                 new SelectListItem { Text = "Reassessment Letter" , Value = "3"},  // Reassessment Letter : 3
                 new SelectListItem { Text = "Teacher Letter" , Value = "4"}, // Teacher Letter : 4
                  new SelectListItem { Text = "Not Eligible Letter" , Value = "5"}, // Not Eligible Letter : 5
                    new SelectListItem { Text = "Member unable to service Letter" , Value = "6"}, //Member unable to service Letter : 6
                      new SelectListItem { Text = "Physician unable to service Letter" , Value = "7"}, // Physician unable to service Letter : 7
                       new SelectListItem { Text = "THC Unable to Reorder" , Value = "8"}, // THC Unable to Reorder : 8
                          new SelectListItem { Text = "PCP Letter" , Value = "9"}, // PCP Letter : 9
                                new SelectListItem { Text = "Diabetic Coinsurance Authorization" , Value = "10"}, // Diabetic Coinsurance Authorization : 10
                                 new SelectListItem { Text = "JB Customer Satisfaction Letter" , Value = "11"}, // JB Customer Satisfaction Letter : 11
                                  new SelectListItem { Text = "Complaint Recovery Letter" , Value = "12"}, // Complaint Recovery Letter : 12
                                    new SelectListItem { Text = "Diabetic Supply Quantity Change" , Value = "13"}, // Diabetic Supply Quantity Change : 13
                                    new SelectListItem { Text = "BCN Order Confirmation Notice" , Value = "14"}, // BCN Order Confirmation Notice : 14
                                     new SelectListItem { Text = "Payment Collection Form" , Value = "15"}, // Payment Collection Form :15
                                     new SelectListItem { Text = "Detailed Receipt Letter" , Value = "16"}, //Detailed Receipt Letter : 16
                                       new SelectListItem { Text = "Libre New Member Letter" , Value = "17"},  //Libre New Member Letter : 17
                                      //    new SelectListItem { Text = "Libre Training Letter" , Value = "18"}, //Libre Training Letter : 18
                                          new SelectListItem { Text = "Dexcom New Member Letter" , Value = "19"}, // Dexcom New Member Letter : 19
                                          // new SelectListItem { Text = "Dexcom-G6 New Member Letter" , Value = "20"}, // Dexcom New Member Letter-G6 : 20
                                          //   new SelectListItem { Text = "Dexcom-G5 Training Letter" , Value = "21"}, // Dexcom-G5 Training Letter : 21
                                          //    new SelectListItem { Text = "Dexcom-G6 Training Letter" , Value = "22"}, //Dexcom-G6 Training Letter : 22
                                                new SelectListItem { Text = "Complaint Resolution Letter" , Value = "23"}, //Complaint Resolution Letter : 23
                                                new SelectListItem { Text = "Concern Contact Letter" , Value = "24"}, // Concern Contact Letter : 24
                                                 new SelectListItem { Text = "Out of State BCBS Letter" , Value = "25"}, // Out of State BCBS Letter : 25
                                          new SelectListItem { Text = "Medicaid as a Secondary Letter" , Value = "26"}, // Medicaid as a Secondary Letter : 26
                                              new SelectListItem { Text = "Off Label Member Letter" , Value = "27"}, // Off Label Member Letter : 27
                                                  new SelectListItem { Text = "Billing Team only" , Value = "28"}, // Symapthy Contact Letter : 28
                                                   new SelectListItem { Text = "Diabetic Reassessment Letter" , Value = "29"},  //Diabetic Reassessment Letter : 29



           }, "Select Generator")
            </div>
            @*<div class="col-md-4">

                    <label>Language Spanish:  </label> @Html.CheckBoxFor(m=>m.spanish)
                </div>*@
        </div>
        <hr />
        <div class="row">

            <label>Account </label>
            @Html.TextBoxFor(m => m.Account, new { Title = "Enter a Valid Account Number" })

            <button class="btn btn-primary btn-large" type="submit">Submit</button>
        </div>
    }
    </div>
    <br />
    <br />

    if (Model.FileExists == true && Model.IsPage != false)
    {

        <h4>@Model.testName</h4>
        <h4>@Model.testid</h4>
        <h3 style="color:red">File Already Exists!</h3>
    }
    else if (Model.FileExists == false && Model.IsPage != false)
    {

        <h4>@Model.testName</h4>
        <h4>@Model.testid</h4>
        <h3 style="color:blue">File Generated Successfully!</h3>
    }
    else if (Model.IsPage == false)
    {
        <h4>@Model.testName</h4>
        <h4>@Model.testid</h4>
        <h3 style="color:blue">File Can not be generated , number os pages are more than 1, Please contact to your team lead.</h3>
    }

    if (!string.IsNullOrEmpty(Model.EmailSuccessMsg))
    {
        <h3 style="color:blue">@Model.EmailSuccessMsg</h3>
    }


    @*testPdf*@

    if (Model.details != null)
    {
        if (Model.details.firstName == "WrongAccount")
        {
            <h3 style="color:red">Invalid Account Number</h3>
        }

        else if (Model.Option == "8" && Model.details.PolicyNumber != null && Model.details.firstName != "WrongAccount" && Model.details.PolicyNumber.Contains("No Policy Number"))
        {

            <h3 style="color:red">THC Unable to Reorder Letter can't be generated for this Account, It doesn't have any Total Heath Care.</h3>

        }

        else if (Model.details.firstName != "WrongAccount" && Model.details.firstName != null && Model.details.firstName != "")
        {
            using (Html.BeginForm("Build", "Generator", FormMethod.Post, new { id = "check" }))
            {

                @Html.HiddenFor(m => m.Account)
                @Html.HiddenFor(m => m.Option)
                @Html.HiddenFor(m => m.details.DOB)
                @Html.HiddenFor(m => m.details.firstName)
                @Html.HiddenFor(m => m.details.lastName)
                @Html.HiddenFor(m => m.details.address1)
                @Html.HiddenFor(m => m.details.address2)
                @Html.HiddenFor(m => m.details.city)
                @Html.HiddenFor(m => m.details.state)
                @Html.HiddenFor(m => m.details.zipcode)
                @Html.HiddenFor(m => m.details.Email)
                @Html.HiddenFor(m => m.details.PhysicianName)
                @Html.HiddenFor(m => m.details.gender)
                @Html.HiddenFor(m => m.details.PrimaryPayer)
                @Html.HiddenFor(m => m.details.RefNo)


                <div style="font-family:'Times New Roman';font-size:medium">
                    <div class="clo-md-2"></div>

                    <form>
                        <fieldset>
                            <legend style="font-family:'Times New Roman'; font-size:larger"> <b>Account Information</b></legend>
                            <div class="clo-md-7">
                                <br />

                                <div class="row">
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"><label>Name:</label></div>
                                    <div class="col-md-2">@Html.TextBoxFor(m => m.details.firstName, new { @class = "form-control", @readonly = "readonly" })</div>

                                </div>

                                <br />

                                <div class="row">
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"><label>Address1:</label></div>
                                    <div class="col-md-2">@Html.TextBoxFor(m => m.details.address1, new { @class = "form-control", @readonly = "readonly" })</div>
                                    &nbsp;
                                    &nbsp;
                                    <div class="col-md-1"><label>Address2:</label></div>
                                    <div class="col-md-2">@Html.TextBoxFor(m => m.details.address2, new { @class = "form-control", @readonly = "readonly" })</div>
                                </div>
                                <br />
                                <div class="row">
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"><label>City:</label></div>
                                    <div class="col-md-2">@Html.TextBoxFor(m => m.details.city, new { @class = "form-control", @readonly = "readonly" })</div>
                                    &nbsp;
                                    &nbsp;
                                    <div class="col-md-1"><label>State:</label></div>
                                    <div class="col-md-2">@Html.TextBoxFor(m => m.details.state, new { @class = "form-control", @readonly = "readonly" })</div>
                                </div>
                                <br />
                                <div class="row">
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"><label>ZipCode:</label></div>
                                    <div class="col-md-2">@Html.TextBoxFor(m => m.details.zipcode, new { @class = "form-control", @readonly = "readonly" })</div>
                                    &nbsp;
                                    &nbsp;
                                    <div class="col-md-1"><label>Phone:</label></div>
                                    <div class="col-md-2">@Html.TextBoxFor(m => m.details.phone, new { @class = "form-control", @readonly = "readonly" })</div>
                                </div>
                                <br />
                                <div class="row">
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"><label>Email:</label></div>
                                    <div class="col-md-3">@Html.TextBoxFor(m => m.details.Email, new { @class = "form-control", @readonly = "readonly" })</div>
                                </div>


                                @if (Model.Option != "13")
                                {
                                    <hr />
                                    <div class="row">
                                        <div class="col-md-2"></div>
                                        <div class="col-md-3"><label>Payer Type:</label></div>
                                        <div class="col-md-2">
                                            @Html.TextBoxFor(m => m.details.PayerType, new { @class = "form-control" })
                                        </div>
                                    </div>
                                }


                                @if (Model.Option == "16")
                                {
                                    <br />
                                    <div class="row">
                                        <div class="col-md-2"></div>
                                        <div class="col-md-3"><label>Date of Service/Order :</label></div>
                                        <div class="col-md-2">

                                            @Html.TextBoxFor(m => m.DateOfService, "{0:dd/MM/yyyy}", new { @class = "datefield form-control", @placeholder = "Enter date ...", @id = "DateOfService" })

                                        </div>
                                    </div>
                                    <br />
                                    <div class="row">
                                        <div class="col-md-2"></div>
                                        <div class="col-md-3"><label>Detailed Receipt for Copay Collected on :</label></div>
                                        <div class="col-md-2">
                                            @*@Html.Kendo().DatePicker().Name("DetailedReceiptDate").Value(Model.DetailedReceiptDate).Format("MM/dd/yyyy")*@
                                            @*<input type="date" id="DetailedReciptDate" value="@Model.DetailedReceiptDate" />*@

                                            @Html.TextBoxFor(m => m.DetailedReceiptDate, "{0:dd/MM/yyyy}", new { @class = "datefield form-control", @placeholder = "Enter date ...", @id = "DetailedReciptDate" })
                                            <br />

                                            <br />
                                            <p style="color:red">Format accepted are MM/DD/YYYY or MM-DD-YYYY  . </p>
                                            @*@Html.EditorFor(m=>m.DetailedReceiptDate)*@
                                        </div>
                                    </div>

                                    <hr />
                                    //-- list of products
                                    <div class="row">

                                        <div>
                                            <div class="row middle">
                                                <h3 style="color:blue">
                                                    Product list from RWO
                                                </h3>
                                            </div>
                                            <hr />


                                            <div class="table-responsive middle">
                                                <table data-sortable class="table table-hover table-striped table-bordered" style="width:1200px">
                                                    <thead>
                                                        <tr>
                                                            <th>Description of Product</th>
                                                            <th>Quantity</th>
                                                            <th style="width:90px;">UOM</th>
                                                            <th>Insurance Rate</th>
                                                            <th>Amount of Copay Collected</th>
                                                            <th>Include</th>


                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @for (int i = 0; i < Model.prodlist.Count(); i++)
                                                        {
                                                            <tr>
                                                                <td>
                                                                    @if (Model.prodlist[i].Prod != null)
                                                                    {
                                                                        @Html.DisplayFor(x => x.prodlist[i].Prod)
                                                                    }
                                                                    else
                                                                    {

                                                                        @Html.TextBoxFor(x => x.prodlist[i].Prod)

                                                                    }
                                                                    @Html.HiddenFor(x => x.prodlist[i].Prod)

                                                                </td>
                                                                <td>
                                                                    @if (Model.prodlist[i].qty != null)
                                                                    {
                                                                        @Html.DisplayFor(x => x.prodlist[i].qty)

                                                                    }
                                                                    else
                                                                    {
                                                                        @Html.TextBoxFor(x => x.prodlist[i].qty)
                                                                    }
                                                                    @Html.HiddenFor(x => x.prodlist[i].qty)
                                                                </td>
                                                                <td>

                                                                    @Html.DisplayFor(x => x.prodlist[i].UOM)


                                                                    @Html.HiddenFor(x => x.prodlist[i].UOM)
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(x => x.prodlist[i].insRt, new { @class = "form-control" })
                                                                    @Html.HiddenFor(x => x.prodlist[i].insRt)
                                                                    @Html.ValidationMessageFor(x => x.prodlist[i].insRt, "", new { @class = "text-danger" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(x => x.prodlist[i].amt, new { @class = "form-control" })
                                                                    @Html.HiddenFor(x => x.prodlist[i].amt)
                                                                    @Html.ValidationMessageFor(x => x.prodlist[i].amt, "", new { @class = "text-danger" })
                                                                </td>
                                                                <td>
                                                                    @Html.CheckBoxFor(x => x.prodlist[i].include, new { @class = "form-control" })
                                                                    @Html.HiddenFor(x => x.prodlist[i].include)

                                                                </td>

                                                            </tr>



                                                        }
                                                    </tbody>

                                                </table>
                                            </div>

                                        </div>
                                    </div>


                                }


                                @if (Model.Option == "15")
                                {
                                    <hr />
                                    //-- list of products
                                    <div class="row">

                                        <div>
                                            <div class="row middle">
                                                <h3 style="color:blue">
                                                    Product list from RWO
                                                </h3>
                                            </div>
                                            <hr />


                                            <div class="table-responsive middle">
                                                <table data-sortable class="table table-hover table-striped table-bordered" style="width:1000px">
                                                    <thead>
                                                        <tr>
                                                            <th>Description of Product</th>
                                                            <th>Quantity</th>
                                                            <th>Insurance Rate</th>
                                                            <th>Amount</th>
                                                            <th>Include</th>


                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @for (int i = 0; i < Model.prodlist.Count(); i++)
                                                        {
                                                            <tr>
                                                                <td>
                                                                    @if (Model.prodlist[i].Prod != null)
                                                                    {
                                                                        @Html.DisplayFor(x => x.prodlist[i].Prod)
                                                                    }
                                                                    else
                                                                    {

                                                                        @Html.TextBoxFor(x => x.prodlist[i].Prod)

                                                                    }
                                                                    @Html.HiddenFor(x => x.prodlist[i].Prod)

                                                                </td>
                                                                <td>
                                                                    @if (Model.prodlist[i].qty != null)
                                                                    {
                                                                        @Html.DisplayFor(x => x.prodlist[i].qty)

                                                                    }
                                                                    else
                                                                    {
                                                                        @Html.TextBoxFor(x => x.prodlist[i].qty)
                                                                    }
                                                                    @Html.HiddenFor(x => x.prodlist[i].qty)
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(x => x.prodlist[i].insRt, new { @class = "form-control" })
                                                                    @Html.HiddenFor(x => x.prodlist[i].insRt)
                                                                    @Html.ValidationMessageFor(x => x.prodlist[i].insRt, "", new { @class = "text-danger" })
                                                                </td>
                                                                <td>
                                                                    @Html.TextBoxFor(x => x.prodlist[i].amt, new { @class = "form-control" })
                                                                    @Html.HiddenFor(x => x.prodlist[i].amt)
                                                                    @Html.ValidationMessageFor(x => x.prodlist[i].amt, "", new { @class = "text-danger" })
                                                                </td>
                                                                <td>
                                                                    @Html.CheckBoxFor(x => x.prodlist[i].include, new { @class = "form-control" })
                                                                    @Html.HiddenFor(x => x.prodlist[i].include)

                                                                </td>

                                                            </tr>



                                                        }
                                                    </tbody>

                                                </table>
                                            </div>

                                        </div>
                                    </div>
                                    //------------------------


                                    <hr />
                                    <div class="row">
                                        <div class="col-md-2"></div>
                                        <div class="col-md-3"><label>Coinsurance:</label></div>
                                        <div class="col-md-2">
                                            @Html.TextBoxFor(m => m.Coins, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.Coins, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <br />
                                    <div class="row">
                                        <div class="col-md-2"></div>
                                        <div class="col-md-5">
                                            <span style="color:red">
                                                NOTE:  If deductible has been met enter 0 <br />
                                                If member is covered at 100% AFTER deductible then enter 0
                                            </span>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-2"></div>
                                        <div class="col-md-3"><label>Deductible:</label></div>
                                        <div class="col-md-2">

                                            @Html.TextBoxFor(m => m.Deduc, new { @class = "form-control" })


                                            @Html.ValidationMessageFor(m => m.Deduc, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <br />
                                    <div class="row">
                                        <div class="col-md-2"></div>
                                        <div class="col-md-3"><label>Amount Due:</label></div>
                                        <div class="col-md-2">
                                            @Html.TextBoxFor(m => m.AmountDue, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.AmountDue, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                }




                                @if (Model.Option == "13")
                                {
                                    <hr />
                                    <div class="row">
                                        <div class="col-md-2"></div>
                                        <div class="col-md-2"><label>Effective date of RX:</label></div>
                                        <div class="col-md-2">
                                            @Html.Kendo().DatePicker().Name("RXDate").Value(Model.RXDate).Format("MM/dd/yyyy")
                                        </div>
                                    </div>

                                    <hr />
                                    <div class="row">
                                        <div class="col-md-6" style="font-family:'Times New Roman'; font-size:larger"> <b>Testing Time Change:</b></div>
                                    </div>
                                    <hr />
                                    <div class="row">

                                        <div style="float:left;width:150px;margin-left:150px"><label>Test Strips From </label> </div>
                                        <div style="float:left; "> @Html.TextBoxFor(model => model.TestStripsFrom, new { @style = "width:40px;" }) </div>
                                        <div style="float:left;width:100px"> <label>Boxes &nbsp;&nbsp;&nbsp;&nbsp; To</label> </div>
                                        <div style="float:left; "> @Html.TextBoxFor(model => model.TestStripsTo, new { @style = "width:40px;" }) </div>
                                        <div style="float:left;width:150px"> <label>Boxes  </label> </div>

                                    </div>
                                    <br />
                                    <div class="row">

                                        <div style="float:left;width:150px;margin-left:150px"><label>Lancets From </label> </div>
                                        <div style="float:left; "> @Html.TextBoxFor(model => model.LancetsFrom, new { @style = "width:40px;" }) </div>
                                        <div style="float:left;width:100px"> <label>Boxes &nbsp;&nbsp;&nbsp;&nbsp; To</label> </div>
                                        <div style="float:left; "> @Html.TextBoxFor(model => model.LancetsTo, new { @style = "width:40px;" }) </div>
                                        <div style="float:left;width:150px"> <label>Boxes  </label> </div>

                                    </div>
                                    <br />
                                    <div class="row">

                                        <div style="float:left;width:150px;margin-left:150px"><label>Syringes From </label> </div>
                                        <div style="float:left; "> @Html.TextBoxFor(model => model.SyringesFrom, new { @style = "width:40px;" }) </div>
                                        <div style="float:left;width:100px"> <label>Boxes &nbsp;&nbsp;&nbsp;&nbsp; To</label> </div>
                                        <div style="float:left; "> @Html.TextBoxFor(model => model.SyringesTo, new { @style = "width:40px;" }) </div>
                                        <div style="float:left;width:150px"> <label>Boxes  </label> </div>

                                    </div>
                                    <br />
                                    <div class="row">

                                        <div style="float:left;width:150px;margin-left:150px"><label>Pen Needles From </label> </div>
                                        <div style="float:left; "> @Html.TextBoxFor(model => model.PenNeedlesFrom, new { @style = "width:40px;" }) </div>
                                        <div style="float:left;width:100px"> <label>Boxes &nbsp;&nbsp;&nbsp;&nbsp; To</label> </div>
                                        <div style="float:left; "> @Html.TextBoxFor(model => model.PenNeedlesTo, new { @style = "width:40px;" }) </div>
                                        <div style="float:left;width:150px"> <label>Boxes  </label> </div>

                                    </div>
                                    <br />
                                    <div class="row">

                                        <div style="float:left;width:150px;margin-left:150px"><label>Infusion Sets From </label> </div>
                                        <div style="float:left; "> @Html.TextBoxFor(model => model.InfusionSetsFrom, new { @style = "width:40px;" }) </div>
                                        <div style="float:left;width:100px"> <label>Boxes &nbsp;&nbsp;&nbsp;&nbsp; To</label> </div>
                                        <div style="float:left; "> @Html.TextBoxFor(model => model.InfusionSetsTo, new { @style = "width:40px;" }) </div>
                                        <div style="float:left;width:150px"> <label>Boxes  </label> </div>

                                    </div>
                                    <br />
                                    <div class="row">

                                        <div style="float:left;width:150px;margin-left:150px"><label>Pods From </label> </div>
                                        <div style="float:left; "> @Html.TextBoxFor(model => model.PodsFrom, new { @style = "width:40px;" }) </div>
                                        <div style="float:left;width:100px"> <label>Boxes &nbsp;&nbsp;&nbsp;&nbsp; To</label> </div>
                                        <div style="float:left; "> @Html.TextBoxFor(model => model.PodsTo, new { @style = "width:40px;" }) </div>
                                        <div style="float:left;width:150px"> <label>Boxes  </label> </div>

                                    </div>
                                    <br />
                                    <div class="row">

                                        <div style="float:left;width:150px;margin-left:150px"><label>Reservoirs From </label> </div>
                                        <div style="float:left; "> @Html.TextBoxFor(model => model.ReservoirsFrom, new { @style = "width:40px;" }) </div>
                                        <div style="float:left;width:100px"> <label>Boxes &nbsp;&nbsp;&nbsp;&nbsp; To</label> </div>
                                        <div style="float:left; "> @Html.TextBoxFor(model => model.ReservoirsTo, new { @style = "width:40px;" }) </div>
                                        <div style="float:left;width:150px"> <label>Boxes  </label> </div>

                                    </div>

                                }
                                @*<div class="col-md-2">@Html.DropDownListFor(m => m.payerid, Model.payerType, "select", new { @style = "width:200px;" })</div>*@
                                <hr />



                                @if (Model.Option == "10")
                                {
                                    <hr />
                                    <div class="row">
                                        <div class="col-md-2"></div>
                                        <div class="col-md-3"><label>Physician Times Testing:</label></div>
                                        <div class="col-md-2">
                                            @Html.TextBoxFor(m => m.PhysicianTimesTesting, new { @class = "form-control" })
                                        </div>
                                    </div>

                                    <hr />
                                    <div class="row">
                                        <div class="col-md-2"></div>
                                        <div class="col-md-3"><label>Secondary Insurance Allowed Amt:</label></div>
                                        <div class="col-md-2">
                                            @Html.TextBoxFor(m => m.SecInsAllowedAmt, new { @class = "form-control" })
                                        </div>
                                    </div>

                                    <hr />
                                    <div class="row">
                                        <div class="col-md-2"></div>
                                        <div class="col-md-3"><label>Primary Insurance coverage Amt (%)</label></div>
                                        <div class="col-md-2">
                                            @Html.TextBoxFor(m => m.PriInsCovAmt, new { @class = "form-control" })
                                        </div>
                                    </div>


                                    <hr />
                                    <div class="row">
                                        <div class="col-md-2"></div>
                                        <div class="col-md-3"><label>Member Owed Amt ($):</label></div>
                                        <div class="col-md-2">
                                            @Html.TextBoxFor(m => m.MemOwedAmt, new { @class = "form-control" })
                                        </div>
                                    </div>
                                }

                                @if (Model.Option == "7" || Model.Option == "8")
                                {
                                    <hr />
                                    <div class="row">
                                        <div class="col-md-2"></div>
                                        <div class="col-md-3"><label>Physician Name:</label></div>
                                        <div class="col-md-2">
                                            @Html.TextBoxFor(m => m.details.PhysicianName, new { @class = "form-control" })
                                        </div>
                                    </div>
                                }

                                @if (Model.Option == "6" || Model.Option == "7")
                                {

                                    <hr />
                                    <div class="row">
                                        <div class="col-md-4"></div>
                                        <div class="col-md-2">@Html.ValidationMessageFor(m => m.Reason)</div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-2"></div>

                                        <div class="col-md-2">
                                            <label>Reason:</label>

                                        </div>

                                        <div class="col-md-2">@Html.TextAreaFor(m => m.Reason, new { rows = "4", cols = "70" })</div>
                                    </div>
                                }

                                @if (Model.Option == "24")
                                {

                                    <hr />
                                    <div class="row">
                                        <div class="col-md-4"></div>
                                        <div class="col-md-2">@Html.ValidationMessageFor(m => m.CRL_Text3)</div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-2"></div>

                                        <div class="col-md-2">
                                            <label>Contact person with ext.#</label>

                                        </div>

                                        <div class="col-md-2">@Html.TextAreaFor(m => m.CRL_Text3, new { rows = "4", cols = "70" })</div>
                                    </div>
                                }

                                @if (Model.Option == "23")
                                {

                                    <hr />
                                    <div class="row">
                                        <div class="col-md-4"></div>
                                        <div class="col-md-2">@Html.ValidationMessageFor(m => m.CRL_Text1)</div>

                                    </div>
                                    <div class="row">
                                        <div class="col-md-2"></div>

                                        <div class="col-md-2">
                                            <label>Result about Investigation:</label>

                                        </div>

                                        <div class="col-md-2">@Html.TextAreaFor(m => m.CRL_Text1, new { rows = "4", cols = "70" })</div>
                                    </div>

                                    <hr />
                                    <div class="row">
                                        <div class="col-md-4"></div>
                                        <div class="col-md-2">@Html.ValidationMessageFor(m => m.CRL_Text2)</div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-2"></div>

                                        <div class="col-md-2">
                                            <label>Resolution:</label>

                                        </div>

                                        <div class="col-md-2">@Html.TextAreaFor(m => m.CRL_Text2, new { rows = "4", cols = "70" })</div>
                                    </div>

                                    <hr />
                                    <div class="row">
                                        <div class="col-md-4"></div>
                                        <div class="col-md-2">@Html.ValidationMessageFor(m => m.CRL_Text3)</div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-2"></div>

                                        <div class="col-md-2">
                                            <label>Contact person with ext.#</label>

                                        </div>

                                        <div class="col-md-2">@Html.TextAreaFor(m => m.CRL_Text3, new { rows = "4", cols = "70" })</div>
                                    </div>
                                }

                                @if (Model.Option == "26")
                                {
                                    <hr />
                                    <div class="row">
                                        <div class="col-md-4"></div>
                                        <div class="col-md-3">@Html.ValidationMessageFor(m => m.OrderedSupplies)</div>

                                    </div>
                                    <div class="row">
                                        <div class="col-md-2"></div>

                                        <div class="col-md-2">
                                            <label>Dr. ordered Medical Supplies :</label>

                                        </div>

                                        <div class="col-md-2">@Html.TextAreaFor(m => m.OrderedSupplies, new { rows = "4", cols = "70" })</div>
                                    </div>

                                    <hr />


                                    <div class="row">
                                        <div class="col-md-4"></div>
                                        <div class="col-md-3">@Html.ValidationMessageFor(m => m.PriInsAllow1)</div>

                                    </div>
                                    <div class="row">
                                        <div class="col-md-2"></div>

                                        <div class="col-md-2">
                                            <label>Primary Insurance Allows :</label>

                                        </div>

                                        <div class="col-md-2">@Html.TextAreaFor(m => m.PriInsAllow1, new { rows = "4", cols = "70" })</div>
                                    </div>

                                    <hr />
                                    <div class="row">
                                        <div class="col-md-4"></div>
                                        <div class="col-md-3">@Html.ValidationMessageFor(m => m.SecInsAllow1)</div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-2"></div>

                                        <div class="col-md-2">
                                            <label>Secondary Insurance Allows:</label>

                                        </div>

                                        <div class="col-md-2">@Html.TextAreaFor(m => m.SecInsAllow1, new { rows = "4", cols = "70" })</div>
                                    </div>

                                    <hr />

                                    <div class="row">
                                        <div class="col-md-4"></div>
                                        <div class="col-md-3">@Html.ValidationMessageFor(m => m.SecInsName)</div>

                                    </div>
                                    <div class="row">
                                        <div class="col-md-2"></div>

                                        <div class="col-md-2">
                                            <label>Secondary Insurance Name:</label>

                                        </div>

                                        <div class="col-md-2">@Html.TextAreaFor(m => m.SecInsName, new { rows = "4", cols = "70" })</div>
                                    </div>

                                    <hr />

                                    <div class="row">
                                        <div class="col-md-4"></div>
                                        <div class="col-md-2">@Html.ValidationMessageFor(m => m.EstimateCost)</div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-2"></div>

                                        <div class="col-md-2">
                                            <label>Estimate Cost</label>

                                        </div>

                                        <div class="col-md-2">@Html.TextAreaFor(m => m.EstimateCost, new { rows = "4", cols = "70" })</div>
                                    </div>



                                }
                                @if (Model.Option == "27")
                                {
                                    <hr />
                                    <div class="row">
                                        <div class="col-md-4"></div>
                                        <div class="col-md-3">@Html.ValidationMessageFor(m => m.OffLableText)</div>

                                    </div>
                                    <div class="row">
                                        <div class="col-md-2"></div>

                                        <div class="col-md-2">
                                            <label>Other :</label>

                                        </div>

                                        <div class="col-md-2">@Html.TextAreaFor(m => m.OffLableText, new { rows = "4", cols = "70" })</div>
                                    </div>
                                }


                                @if (1 == 1)
                                {
                                    <hr />
                                    <div id="ChineseMsg" style="display:none" class="alert alert-info"><label>We don't have any Chinese or Russian  Email and Fax option availble at this point.</label></div>
                                    <hr />
                                    <div class="row">
                                        <div class="col-md-3"></div>
                                        <div class="col-md-2"><label>Fax : </label> @Html.CheckBoxFor(m => m.FileFax) </div>

                                        <div class="col-md-2">@Html.TextBoxFor(m => m.FedEx, new { disabled = "disabled" })</div>
                                        <div id="FaxMsg" style="display:none">
                                            @Html.ValidationMessageFor(model => model.FedEx, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <hr />
                                    <div class="row">
                                        <div class="col-md-3"></div>
                                        <div class="col-md-2"><label>Email :</label>  @Html.CheckBoxFor(m => m.FileEmail)</div>

                                        <div class="col-md-2">@Html.TextBoxFor(m => m.Email, new { disabled = "disabled" })</div>
                                        <div id="EmailMsg" style="display:none">
                                            @Html.ValidationMessageFor(model => model.Email)
                                        </div>
                                    </div>
                                }
                                @if (Model.Option == "1")
                                {
                                    <hr />
                                    <div class="row">
                                        <div class="col-md-1"></div>
                                        <div class="col-md-2"><label> Language English:  </label> @Html.CheckBoxFor(m => m.English)</div>
                                        <div class="col-md-2"><label> Language Spanish:  </label> @Html.CheckBoxFor(m => m.spanish)</div>
                                        @if (Model.IsChineseFormAvail == true)
                                        {
                                            <div class="col-md-2"><label> Language Chinese:  </label> @Html.CheckBoxFor(m => m.chinese)</div>
                                        }

                                    </div>
                                    <div class="row"></div>
                                    <div class="row">
                                        <div class="col-md-1"></div>
                                        @if (Model.IsRussianFormAvail == true)
                                        {
                                            <div class="col-md-2"><label> Language Russian:  </label> @Html.CheckBoxFor(m => m.russian)</div>
                                        }
                                        @*@if (Model.IsArmenianFormAvail == true)
                                        {
                                            <div class="col-md-2"><label> Language Armenian:  </label> @Html.CheckBoxFor(m => m.armenian)</div>
                                        }
                                        @if (Model.IsArabicFormAvail == true)
                                        {
                                            <div class="col-md-2"><label> Language Arabic:  </label> @Html.CheckBoxFor(m => m.arabic)</div>
                                        }*@

                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">&nbsp;</div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-1"></div>
                                        <div class="col-md-2"><label>Please enter the Letter Language that is not available above: </label></div>
                                        <div class="col-md-5 font-weight-bold">
                                            @Html.TextBoxFor(x => Model.OtherLanguage)
                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">&nbsp;</div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-1"></div>
                                        <div class="col-md-2"><label>Braille Letter : </label></div>
                                        <div class="col-md-5">
                                            @Html.CheckBoxFor(m => m.NeedBrailleLetter)
                                        </div>

                                    </div>
                                    @*if (Model.IsChineseFormAvail == true)
            {
                    <hr />
                    <div class="row">
                        <div class="col-md-3"></div>
                        <div class="col-md-4"><label> Language Chinese:  </label> @Html.CheckBoxFor(m => m.chinese)</div>
                     </div>


            }
            if (Model.IsRussianFormAvail == true)
            {
                <hr />
                    <div class="row">
                        <div class="col-md-3"></div>
                        <div class="col-md-4"><label> Language Russian:  </label> @Html.CheckBoxFor(m => m.russian)</div>
                    </div>


            }*@

                                }

                                @if (Model.Option == "2")
                                {
                                    <hr />
                                    <div class="row">
                                        <div class="col-md-1"></div>
                                        <div class="col-md-2"><label> Language English:  </label> @Html.CheckBoxFor(m => m.English)</div>
                                        <div class="col-md-2"><label> Language Spanish:  </label> @Html.CheckBoxFor(m => m.spanish)</div>

                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">&nbsp;</div>


                                    </div>
                                    <div class="row">
                                        <div class="col-md-1"></div>
                                        <div class="col-md-2"><label>Please enter the Letter Language that is not available above: </label></div>
                                        <div class="col-md-5 font-weight-bold">
                                            @Html.TextBoxFor(x => Model.OtherLanguage)
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">&nbsp;</div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-1"></div>
                                        <div class="col-md-2"><label>Braille Letter : </label></div>
                                        <div class="col-md-5">
                                            @Html.CheckBoxFor(m => m.NeedBrailleLetter)
                                        </div>

                                    </div>
                                }

                                @if (Model.Option == "6")
                                {
                                    <hr />

                                    <div class="row">
                                        <div class="col-md-12">&nbsp;</div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-1"></div>
                                        <div class="col-md-3">
                                            <label> Language English: &nbsp;&nbsp; </label>  @Html.CheckBoxFor(m => m.English)

                                        </div>
                                        <div class="col-md-5">

                                        </div>

                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">&nbsp;</div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-1"></div>
                                        <div class="col-md-3"><label>Please enter the Letter Language that is not available above: </label></div>
                                        <div class="col-md-5 font-weight-bold">
                                            @Html.TextBoxFor(x => Model.OtherLanguage)
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">&nbsp;</div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-1"></div>
                                        <div class="col-md-3">
                                            <label>Braille Letter :  &nbsp;&nbsp; </label>  @Html.CheckBoxFor(m => m.NeedBrailleLetter)
                                        </div>


                                    </div>
                                }


                                @Html.HiddenFor(t => t.details.Payerid)
                                @Html.HiddenFor(t => t.details.payername)
                                @Html.HiddenFor(t => t.details.contactpayer)
                                @Html.HiddenFor(t => t.details.PolicyNumber)
                                @Html.HiddenFor(t => t.details.SubsNumberPCP)

                                <hr />
                                <br />
                                <div class="row">
                                    <div class="col-md-2"></div>
                                    @if (Model.Option == "1")
                                    {
                                        <button class="btn btn-primary btn-large" type="submit" onclick="return validate();" style="width: 300px; margin: 0 auto">AOB Packet</button>
                                    }
                                    else if (Model.Option == "13")
                                    {
                                        <button class="btn btn-primary btn-large" type="button" onclick="return validate();" style="width: 300px; margin: 0 auto" id="editButton">Letter Generator</button>

                                    }
                                    else
                                    {
                                        <button class="btn btn-primary btn-large" type="submit" onclick="return validate()" id="ChkDate" style="width: 300px; margin: 0 auto">Letter Generator</button>

                                    }
                                    @*else
            { <button class="btn btn-primary btn-large" type="submit" style="width: 300px; margin: 0 auto" disabled="disabled">AOB Packet</button>
            }*@
                                </div>

                                <br />

                            </div>
                        </fieldset>
                    </form>

                    <div id="myModal" class="modal_style">

                        <!-- Modal content -->
                        <div class="modal-val-content" onmousedown='mydragg.startMoving(this, "horizontal-form", event);' onmouseup='mydragg.stopMoving("horizontal-form");'>
                            <p id="TextValues"> ?</p>
                            <input type="button" class="btn btn-primary" value="Yes" onclick="yespop()" /> &nbsp;&nbsp;
                            <input type="button" class="btn btn-primary" value="No" onclick="nopop()" />

                        </div>
                    </div>



                    <div id="ValidateTexts" class="modal_style">



                        <!-- Modal content -->
                        <div class="modal-content" onmousedown='mydragg.startMoving(this, "horizontal-form", event);' onmouseup='mydragg.stopMoving("horizontal-form");'>
                            <p> Please enter the value in all text boxes. If the Diabetic supply quantity is not chnaged then enter zero.</p>
                            <input type="button" class="btn btn-primary" value="OK" onclick="nopop()" />
                        </div>
                    </div>
                </div>
            }
        }

    }


}




<style>
    .modal_style {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        padding-top: 100px; /* Location of the box */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }
    /* Modal Content */
    .modal-content {
        background-color: #fefefe;
        margin: auto;
        padding: 20px;
        border: 1px solid #888;
        width: 50%;
        height: 130px;
        text-align: center;
    }

    .modal-val-content {
        background-color: #fefefe;
        margin: auto;
        padding: 20px;
        border: 1px solid #888;
        width: 50%;
        height: 250px;
        text-align: center;
    }

    .field-validation-error {
        color: #ff0000;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ff0000;
        background-color: #ffeeee;
    }

    .validation-summary-errors {
        font-weight: bold;
        color: #ff0000;
    }

    .validation-summary-valid {
        display: none;
    }


    .editor-label {
        float: left;
        width: 150px;
    }

    .editor-label {
        margin-left: 100px;
    }

    .editor-label1 {
        margin-left: 100px;
    }

    .editor-label1 {
        float: left;
        width: 100px;
    }

    .editor-label2 {
        float: left;
        width: 50px;
    }



    .editor-field {
        margin-left: 5px;
    }

        .editor-field input {
            width: 40px;
        }
</style>



<script>
    var mydragg = function () {
        return {
            move: function (divid, xpos, ypos) {
                divid.style.left = xpos + 'px';
                divid.style.top = ypos + 'px';
            },
            startMoving: function (divid, container, evt) {
                evt = evt || window.event;
                var posX = evt.clientX,
                    posY = evt.clientY,
                    divTop = divid.style.top,
                    divLeft = divid.style.left,
                    eWi = parseInt(divid.style.width),
                    eHe = parseInt(divid.style.height),
                    cWi = parseInt(document.getElementById(container).style.width),
                    cHe = parseInt(document.getElementById(container).style.height);
                document.getElementById(container).style.cursor = 'move';
                divTop = divTop.replace('px', '');
                divLeft = divLeft.replace('px', '');
                var diffX = posX - divLeft,
                    diffY = posY - divTop;
                document.onmousemove = function (evt) {
                    evt = evt || window.event;
                    var posX = evt.clientX,
                        posY = evt.clientY,
                        aX = posX - diffX,
                        aY = posY - diffY;
                    if (aX < 0) aX = 0;
                    if (aY < 0) aY = 0;
                    if (aX + eWi > cWi) aX = cWi - eWi;
                    if (aY + eHe > cHe) aY = cHe - eHe;
                    mydragg.move(divid, aX, aY);
                }
            },
            stopMoving: function (container) {
                var a = document.createElement('script');
                document.getElementById(container).style.cursor = 'default';
                document.onmousemove = function () { }
            },
        }
    }();




    $("#ChkDate").click(function (e) {
        //  alert("checked")

        var OrderDate = $('#DateOfService').val();
        var date = $('#DetailedReciptDate').val();
        //  alert($('#DetailedReciptDate').val());
        var values = date.split("-");
        var values1 = date.split("/");
        var Ordervalues = OrderDate.split("-");
        var Ordervalues1 = OrderDate.split("/");
        // alert("values[0]");
        //  alert(values[0]);
        //  alert("values[1]");
        //  alert(values[1]);
        //  alert("values[2]");
        //  alert(values[2]);
        //   alert("values1[0]");
        //   alert(values1[0]);
        //  alert("values1[1]");
        //  alert(values1[1]);
        //  alert("values1[2]");
        //  alert(values1[2]);



        if (((values[0] >= 1 && values[0] <= 12) || (values1[0] >= 1 && values1[0] <= 12)) && ((values[1] >= 1 && values[1] <= 31) || (values1[1] >= 1 && values1[1] <= 31)) && ((values[2] >= 2000 && values[2] <= 2099) || (values1[2] >= 2000 && values1[2] <= 2099))) {
            // alert("Date is valid");
        }
        else {
            alert("Detailed Receipt Date is not valid, please enter a valid date . ");
            e.preventDefault();
        }
        if (((Ordervalues[0] >= 1 && Ordervalues[0] <= 12) || (Ordervalues1[0] >= 1 && Ordervalues1[0] <= 12)) && ((Ordervalues[1] >= 1 && Ordervalues[1] <= 31) || (Ordervalues1[1] >= 1 && Ordervalues1[1] <= 31)) && ((Ordervalues[2] >= 2000 && Ordervalues[2] <= 2099) || (Ordervalues1[2] >= 2000 && Ordervalues1[2] <= 2099))) {
            // alert("Date is valid");
        }
        else {
            alert("Date of Service / Order is not valid, please enter a valid date . ");
            e.preventDefault();
        }

        // alert("done!");

        //var allok = false;


        //if (!allok) {
        //    e.preventDefault();
        //}

    }
    );


    //$('#DetailedReciptDate').datepicker(
    //      {
    //          changeMonth: true,
    //          changeYear: true
    //      }
    //    );

    var modal = document.getElementById('myModal');

    var ValidateModel = document.getElementById('ValidateTexts');




    $('#editButton').click(function () {

        //   alert("clicked");
        if ($("#TestStripsFrom").val() != '' && $("#TestStripsTo").val() != ''
            && $("#LancetsFrom").val() != '' && $("#LancetsTo").val() != ''
            && $("#SyringesFrom").val() != '' && $("#SyringesTo").val() != ''
            && $("#PenNeedlesFrom").val() != '' && $("#PenNeedlesTo").val() != ''
            && $("#InfusionSetsFrom").val() != '' && $("#InfusionSetsTo").val() != ''
            && $("#PodsFrom").val() != '' && $("#PodsTo").val() != ''
            && $("#ReservoirsFrom").val() != '' && $("#ReservoirsTo").val() != '') {
            modopen();
            if ($("#TestStripsFrom").val() != 0 && $("#TestStripsTo").val() != 0) {
                $("p#TextValues").html('you have entered the below values: ' + '   <br />' + 'Test Strips from ' + $("#TestStripsFrom").val() + ' to ' + $("#TestStripsTo").val());

            }

            if ($("#LancetsFrom").val() != 0 && $("#LancetsTo").val() != 0) {
                $("p#TextValues").append('   <br />' + 'Lancets from ' + $("#LancetsFrom").val() + ' to ' + $("#LancetsTo").val());
            }

            if ($("#SyringesFrom").val() != 0 && $("#SyringesTo").val() != 0) {
                $("p#TextValues").append('   <br />' + 'Syringes from ' + $("#SyringesFrom").val() + ' to ' + $("#SyringesTo").val());
            }

            if ($("#PenNeedlesFrom").val() != 0 && $("#PenNeedlesTo").val() != 0) {
                $("p#TextValues").append('   <br />' + 'PenNeedles from ' + $("#PenNeedlesFrom").val() + ' to ' + $("#PenNeedlesTo").val());
            }

            if ($("#InfusionSetsFrom").val() != 0 && $("#InfusionSetsTo").val() != 0) {
                $("p#TextValues").append('   <br />' + 'InfusionSets from ' + $("#InfusionSetsFrom").val() + ' to ' + $("#InfusionSetsTo").val());
            }

            if ($("#PodsFrom").val() != 0 && $("#PodsTo").val() != 0) {
                $("p#TextValues").append('   <br />' + 'Pods from ' + $("#PodsFrom").val() + ' to ' + $("#PodsTo").val());
            }

            if ($("#ReservoirsFrom").val() != 0 && $("#ReservoirsTo").val() != 0) {
                $("p#TextValues").append('   <br />' + 'Reservoirs from ' + $("#ReservoirsFrom").val() + ' to ' + $("#ReservoirsTo").val());
            }
        }
        else {
            Valopen();
            //alert($("#TestStripsFrom").val());

            //+ ' to ' + $("#TestStripsTo").val());
        }


    })

    function modopen() {
        modal.style.display = "block";
    }
    function Valopen() {
        ValidateModel.style.display = "block";
    }
    function yespop() {

        document.getElementById('check').submit();
    }
    function nopop() {
        modal.style.display = "none";
        ValidateModel.style.display = "none";
    }


    $(document).ready(function () {
        $('#FaxMsg').hide();
        $('#EmailMsg span.field-validation-error').text('')
        $('#EmailMsg').hide();
    }
    )

    $('#FileFax').click(function () {
        var $this = $(this);

        if ($this.is(':checked')) {           
                $('#FaxMsg').show();
                $('#FedEx').removeAttr("disabled");  
        } else {
            $('#FaxMsg').hide();
            $('#FedEx').attr("disabled", "disabled")
        }
    });

    $('#English').click(function () {
        var $this = $(this);

        if ($this.is(':checked')) {
            $('#ChineseMsg').hide();
            $('#FileFax').show();
            $('#FileEmail').show();
            $('#spanish').removeAttr('checked');
            $('#chinese').removeAttr('checked');
            $('#russian').removeAttr('checked');
            $('#armenian').removeAttr('checked');
            $('#arabic').removeAttr('checked');
        }  
        enableOtherTxt();
    });

    $('#chinese').click(function () {
        var $this = $(this);

        if ($this.is(':checked')) {
            $('#ChineseMsg').show();
            $('#English').removeAttr('checked');
            $('#spanish').removeAttr('checked');
            $('#russian').removeAttr('checked');
            $('#armenian').removeAttr('checked');
            $('#arabic').removeAttr('checked');
            $('#FileFax').hide();
            $('#FileEmail').hide();
            //  $('#FedEx').removeAttr("disabled");
        } else {
            $('#ChineseMsg').hide();
            $('#FileFax').show();
            $('#FileEmail').show();
        }
        enableOtherTxt();
    });


    $('#spanish').click(function () {
        var $this = $(this);

        if ($this.is(':checked')) {
            $('#ChineseMsg').hide();
            $('#FileFax').show();
            $('#FileEmail').show();
            $('#English').removeAttr('checked');
            $('#chinese').removeAttr('checked');
            $('#russian').removeAttr('checked');
            $('#armenian').removeAttr('checked');
            $('#arabic').removeAttr('checked');
        }
        enableOtherTxt();
    });

    $('#russian').click(function () {
        var $this = $(this);

        if ($this.is(':checked')) {
            $('#ChineseMsg').show();
            $('#English').removeAttr('checked');
            $('#chinese').removeAttr('checked');
            $('#spanish').removeAttr('checked');
            $('#armenian').removeAttr('checked');
            $('#arabic').removeAttr('checked');
            $('#FileFax').hide();
            $('#FileEmail').hide();
            //  $('#FedEx').removeAttr("disabled");
        } else {
            $('#ChineseMsg').hide();
            $('#FileFax').show();
            $('#FileEmail').show();
        }
        enableOtherTxt();
    });

    $('#armenian').click(function () {
        var $this = $(this);
        if ($this.is(':checked')) {
            $('#ChineseMsg').hide();
            $('#English').removeAttr('checked');
            $('#chinese').removeAttr('checked');
            $('#spanish').removeAttr('checked');
            $('#russian').removeAttr('checked');
            $('#arabic').removeAttr('checked');
            $('#FileFax').hide();
            $('#FileEmail').hide(); 
        } else { 
            $('#FileFax').show();
            $('#FileEmail').show();
        }

        enableOtherTxt();
    });

    $('#arabic').click(function () {
        var $this = $(this);
        if ($this.is(':checked')) {
            $('#ChineseMsg').hide();
            $('#English').removeAttr('checked');
            $('#chinese').removeAttr('checked');
            $('#spanish').removeAttr('checked');
            $('#russian').removeAttr('checked');
            $('#armenian').removeAttr('checked');
            $('#FileFax').hide();
            $('#FileEmail').hide();
        } else {
            $('#FileFax').show();
            $('#FileEmail').show();
        }

        enableOtherTxt();
    });

    function enableOtherTxt() {
        var english = $('#English').is(':checked');
        var chinese = $('#chinese').is(':checked');
        var spanish = $('#spanish').is(':checked');
        var russian = $('#russian').is(':checked');
        var armenian = $('#armenian').is(':checked');
        var arabic = $('#arabic').is(':checked');
        if (english || chinese || spanish || russian || armenian || arabic) {
            $("#OtherLanguage").val('').attr("disabled", "disabled");
        }
        else {
            $('#OtherLanguage').removeAttr("disabled");
        }
    }

    $("#OtherLanguage").keyup(function () {


        if ($(this).val() == "" || $(this).val() == null) {
            $('#English').removeAttr('disabled');
            $('#chinese').removeAttr('disabled');
            $('#spanish').removeAttr('disabled');
            $('#russian').removeAttr('disabled');
            $('#armenian').removeAttr('disabled');
            $('#arabic').removeAttr('disabled');
        }
        else {
            $('#English').removeAttr('checked').attr("disabled", "disabled");
            $('#chinese').removeAttr('checked').attr("disabled", "disabled");
            $('#spanish').removeAttr('checked').attr("disabled", "disabled");
            $('#russian').removeAttr('checked').attr("disabled", "disabled");
            $('#armenian').removeAttr('checked').attr("disabled", "disabled");
            $('#arabic').removeAttr('checked').attr("disabled", "disabled");
        }
    });

    $('#FileEmail').click(function () {
        var $this = $(this);
        var email = $('#Email').val().trim();        
      
        if ($this.is(':checked')) {       
            if (email != '' || email != null) {
                if (IsEmail(email)) {
                    $("#Email").removeClass("input-validation-error").addClass("valid");
                    $('#EmailMsg').hide();
                }
                else {
                    $("#Email").addClass("input-validation-error").removeClass("valid");
                    $('#EmailMsg').show();
                }
            }
            else {
                $("#Email").val('');
                $('#EmailMsg').show();
            }
           
            $('#Email').removeAttr("disabled");
        } else {
            $("#Email").removeClass("input-validation-error");
            $('#EmailMsg').hide();
            $('#Email').attr("disabled", "disabled")
        }
    });

    $("#Email").keyup(function () {
        var email = $('#Email').val();
        if (IsEmail(email)) {
            $("#Email").removeClass("input-validation-error").addClass("valid");
            $('#EmailMsg').hide();
        }
        else {
            
            $("#Email").removeClass("valid").addClass("input-validation-error");
            $('#EmailMsg').show();
        }
    });

    function IsEmail(email) { 
      var regex = /^([a-zA-Z0-9_\.\-\+])+\@@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
      if(!regex.test(email)) {
        return false;
      }else{
        return true;
      }
    }

</script>

