@model USPS_Report.Areas.Reports.Models.ReturnItems.ReturnItemsVM
@using Kendo.Mvc.UI
@{
    ViewBag.Title = "ReturnItemsData";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<h2>ReturnItemsData</h2>*@
    <table  width="100%" align="center" border="1">
        <tr>
            <td width="23%" valign="top">
                @using (Html.BeginForm("ChooseWorkOrder", "ReturnItems", FormMethod.Post))
                {
                <table width="100%">
                    <tr>
                        <td colspan="2" align="center" style="font-weight:bold;">Please enter Account# Or WO#</td>
                    </tr>
                    <tr>
                        <td>Account:</td>
                        <td>
                            @Html.TextBoxFor(t => t.Account,new { id = "Account" })
                        </td>
                    </tr>
                    <tr>
                        <td>Workorder:</td>
                        <td>
                            @Html.TextBoxFor(t => t.WorkOrder, new { id = "WorkOrder" })
                        </td>
                    </tr>
                    @*<tr>
                        <td>First Name:</td>
                        <td>@Html.TextBoxFor(t => t.FirstName)</td>

                    </tr>
                    <tr>
                        <td>Last Name:</td>
                        <td>@Html.TextBoxFor(t => t.LastName)</td>

                    </tr>
                    <tr>
                        <td>Address:</td>
                        <td>@Html.TextBoxFor(t => t.Address1)</td>

                    </tr>
                    <tr>
                        <td></td>
                        <td>@Html.TextBoxFor(t => t.Address2)</td>

                    </tr>
                    <tr>
                        <td>City:</td>
                        <td>@Html.TextBoxFor(t => t.City)</td>

                    </tr>
                    <tr>
                        <td>State:</td>
                        <td>@Html.TextBoxFor(t => t.State)</td>

                    </tr>
                    <tr>
                        <td>Zip code:</td>
                        <td>@Html.TextBoxFor(t => t.ZipCode)</td>

                    </tr>*@
                    <tr>
                        <td colspan="2" align="center">
                            <button id="btnsubmit" class="btn btn-primary btn-large" type="submit">Next</button>
                        </td>
                    </tr>
                </table>
                    @Html.ValidationMessageFor(t => t.Account, "", new { @class = "redText" })
                    @Html.ValidationMessageFor(t => t.WorkOrder, "", new { @class = "redText" })
                }
                @*<br />
                <br />
                <br />
                <table>
                    <tr>
                        <td align="left" width="23%" style="font-weight:bold;text-decoration-line:underline;">Send Alert To:</td>
                    </tr>
                    <tr>
                        <td align="center" width="23%">
                            <button class="btn btn-primary btn-large" type="submit">Shipping Team</button>
                        </td>
                    </tr>
                    <tr>
                        <td height="20px"></td>
                    </tr>
                    <tr>
                        <td align="center" width="23%">
                            <button class="btn btn-primary btn-large" type="submit">Receiving Team</button>
                        </td>
                    </tr>
                </table>*@
            </td>
            <td width="77%" valign="top">
                @if (Model != null && Model.Details != null)
                {
                <br />
                <table width="100%">
                    <tr>
                        <td colspan="2" align="center" style="font-weight:bold;"> <input type="button" class="btn-link" value="Click here "  onclick="location.href='@Url.Action("HistoryReturns", "ReturnItems")'" />For Past Returns </td>
                    </tr>
                    <tr>
                        <td colspan="2" align="center" style="font-weight:bold;">To edit a return please click on the return item</td>
                    </tr>
                </table>
                <table border="0" cellspacing="5" cellpadding="5">
                    <tbody>
                        <tr>
                            <td>From Date:</td>
                            <td>@Html.TextBox("min", "", new { @class = "min", @readonly = "readonly" })</td>
                        </tr>
                        <tr>
                            <td>To Date:</td>
                            <td>@Html.TextBox("max", "", new { @class = "max", @readonly = "readonly" })</td>
                            <td><button id="btnGo" type="button">Go</button></td>
                            <td><button id="btnClearDates" type="button">Clear Dates</button></td>
                        </tr>
                    </tbody>
                </table>
                    <table  id="ReturnItemsTable" width="100%">
                        <thead>
                            @*<tr>

                            </tr>*@
                            <tr>
                                <th style="display:none;">Return Id</th>
                                <th>RMA #</th>
                                <th>Account #</th>
                                <th>WO #</th>
                                <th>Client Name</th>
                                <th>Phone #</th>
                                <th>Tag_type</th>
                                <th>D.O.S</th>
                                <th>Reason Returned</th>
                                <th>Scheduled For</th>
                                <th>Ship Date</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var rec in Model.Details)
                            {
                                <tr>
                                    <td style="display:none;">@rec.ReturnId</td>
                                    <td>@rec.RMAnum</td>
                                    <td>@Html.ActionLink(@rec.AccountNum.ToString(), "ReturnInfo", "ReturnItems", new { returnId = @rec.ReturnId.ToString() }, null) </td>
                                    <td> @rec.woID </td>
                                    <td>@Html.ActionLink(@rec.First_Name + " " + @rec.Last_Name, "ReturnInfo", "ReturnItems", new { returnId = @rec.ReturnId.ToString() }, null) </td>                                   
                                    <td> @rec.PhNum </td>
                                    <td>@rec.TagType </td>
                                    <td>@rec.RequestDate </td>
                                    <td> @rec.List_Option_text </td>
                                    <td>@rec.ScheduledFor </td>
                                    <td>@rec.LastPrintDate </td>
                                </tr>
                            }
                        </tbody>

                    </table>

                }
            </td>
        </tr>
    </table>




<style>
    th {
        background-color: dodgerblue;
        color: white;
    }

    .middle {
        margin: auto;
        width: 900px;
    }

    .redText {
        color: Red;
    }
</style>

<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="~/Scripts/moment.js"></script>

    <script>
    $(document).ready(function () {

        jQuery('#Account').on('input', function () {
            if ($('#Account').val() != '') {
                $('#WorkOrder').val('');
            }
        });

        jQuery('#WorkOrder').on('input', function () {
            if ($('#WorkOrder').val() != '') {
                $('#Account').val('');
            }
        });

        $('#btnsubmit').click(function (e) {
            if ($('#Account').val() == '' && $('#WorkOrder').val() == '') {
                alert('Please enter AccountNumber or Workorder');
                e.preventDefault();
                    }
        });

      //  var table = $('#ReturnItemsTable').DataTable();

        // Event listener to the two range filtering inputs to redraw on input
        var table = $('#ReturnItemsTable').DataTable({
                "autoWidth": false,
                "lengthChange": false,
                "pageLength": 20,
                dom: 'Blfrtip',
                buttons: [
                     'excel'
                ],
            "drawCallback": function (settings) {
                console.log("DataTables has redrawn the table");
                var selected = this.api().rows({ page: 'current', selected: true }).count();
                var all = this.api().rows({ page: 'current' }).count();

                if (selected > 0 && selected === all) {
                    $('#ReturnItemsTable thead tr').addClass('checked');
                }
                else {
                    $('#ReturnItemsTable thead tr').removeClass('checked');
                }

            },
            order: [1],
            columnDefs: [

                 {
                     "orderable": false,
                     "targets": 0
                 },
              {
                  targets: [7],
                  type: 'date'
              }
            ],
            select: {
                select: true,
                style: 'multi',
                // Restricting Selection
                selector: 'tr>td:nth-child(1)'
            },


        });

        $('#ReturnItemsTable').on('click','td.checkbox-control', function () {
            $(this).parent().toggleClass('checked');
        });




        $('#ReturnItemsTable').on('click','th.checkbox-control', function () {

            $(this).parent().toggleClass('checked');

            if ($(this).parent().is( ".checked" )) {
                table.rows( {page: 'current'} ).select();
            } else {
                table.rows( {page: 'current'} ).deselect();
            }

            table.rows({selected:true}).every(function() {
                $(this.node()).addClass('checked');
            });

            table.rows({selected:false}).every(function() {
                $(this.node()).removeClass('checked');
            });

        });

        $.fn.dataTable.ext.search.push(
    function (settings, data, dataIndex) {
        var valid = true;
        var min = moment($("#min").val());
        if (!min.isValid()) { min = null; }
        console.log(min);

        var max = moment($("#max").val());
        if (!max.isValid()) { max = null; }

        if (min === null && max === null) {
            // no filter applied or no date columns
            valid = true;
        }
        else {

            $.each(settings.aoColumns, function (i, col) {

                if (col.type == "date" ) {
                    if(col.sTitle =="D.O.S"){
                        
                        var cDate = moment(data[i], 'MM/DD/YYYY');
                        console.log(cDate);

                        if (cDate.isValid()) {
                            if (max !== null && max.isBefore(cDate)) {
                                valid = false;
                            }
                            if (min !== null && cDate.isBefore(min)) {
                                valid = false;
                            }
                        }
                        else {
                            valid = false;
                        }
                    }
                }
            });
        }
        return valid;
    });


        //$('#ReturnItemsTable').DataTable({
        //    "autoWidth": false,
        //    "lengthChange": false,
        //    "pageLength": 25
        //    //dom: 'Blfrtip',
        //    //buttons: [
        //    //     'excel'
        //    //]
        //});
    })

    $("#btnGo").click(function () {
        $('#ReturnItemsTable').DataTable().draw();
    });
   
    $(function () {
        $('.min').datepicker();
        $('.max').datepicker();
    });

    $("#btnClearDates").click(function () {
        $('#min').val('');
        $('#max').val('');
        $('#ReturnItemsTable').DataTable().draw();
    });

    </script>
