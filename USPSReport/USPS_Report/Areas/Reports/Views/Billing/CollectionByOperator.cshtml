@model USPS_Report.Areas.Reports.Models.CollectionModel
@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Collection By Operator";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("CollectionByOperator", "Billing", FormMethod.Post))
{

    <h2 class="center">Collection By Operator</h2>

    <div class="row">
        <div class="center">
            @Html.ValidationMessageFor(model => model.OperatorID)
            <h4>
                Please enter a Operator ID : @Html.TextBoxFor(m => m.OperatorID)
                &nbsp;&nbsp;&nbsp;&nbsp;
                Start Date @Html.Kendo().DatePicker().Name("ActivityStartDt").Value(Model.ActivityStartDt).Format("MM/dd/yyyy") &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                End Date @Html.Kendo().DatePicker().Name("ActivityEndDt").Value(Model.ActivityEndDt).Format("MM/dd/yyyy")
            </h4>
          
            <button class="btn btn-primary btn-large" type="submit" style="width: 300px; margin: 0 auto">Submit</button>
        </div>

    </div>
    if (Model != null && Model.OperatorID != null )
    {
        <hr />


        <div class="middle">


            @(Html.Kendo().Grid<USPS_Report.Areas.Reports.Models.CollectionVM>()
                .Name("CollectionReport")
                .Columns(columns =>
                {
                    columns.Bound(t => t.ID_Claim).Title("ID Claim");
                    columns.Bound(t => t.TemplateName).Title("TemplateName");
                    columns.Bound(t => t.ActivityDate).Title("ActivityDate").Format("{0:MM/dd/yyyy}"); 

                })
                       .ToolBar(tools => tools.Excel())
                .Sortable()
                 .Pageable()
                     .Filterable(ftb => ftb.Mode(GridFilterMode.Menu))
                   .Excel(excel => excel
                        .FileName("CollectionByID.xlsx")
                        .AllPages(true)
                        .Filterable(true)
                        .ProxyURL(Url.Action("Excel_Export_Save", "Billing"))
                    )
               .HtmlAttributes(new { style = "width:900px;" })
                    .Reorderable(r => r.Columns(true))
                    .Resizable(r => r.Columns(true))
                    .ColumnMenu()
                .DataSource(dataSource => dataSource
                    .Ajax()
                     .PageSize(1200)
                     .ServerOperation(false)
                    .Model(model => model.Id(p => p.ID_Claim))
                    .Read(read => read.Action("CollectionNeeded", "Billing", new { OpID = Model.OperatorID, StartDt = Model.ActivityStartDt, EndDt= Model.ActivityEndDt }))
                //.Destroy(update => update.Action("PANotNeeded_Destroy", "CustomerService"))


                )
            )


        </div>
    }

}
<style>
    .center {
     text-align:center;
    }

     .middle {
      margin: auto;
        width: 900px;
    }

    .outer {
        width: 100%;
        color: navy;
        background-color: lightblue;
        /*border: 2px solid blue;*/
        padding: 5px;
    }

    .c {
        text-align: center;
    }

    .text-field {
        background-color: #FFFFCC;
        color: #FF0000;
        width: 60px;
        font-size: large;
    }

    .field-validation-error {
        color: #ff0000;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ff0000;
        background-color: #ffeeee;
    }

    .validation-summary-errors {
        font-weight: bold;
        color: #ff0000;
    }

    .validation-summary-valid {
        display: none;
    }
</style>

