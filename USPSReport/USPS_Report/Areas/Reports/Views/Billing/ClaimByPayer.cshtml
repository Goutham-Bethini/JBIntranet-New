@model USPS_Report.Areas.Reports.Models.ClaimModel
@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Claim By Payer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("ClaimByPayer", "Billing", FormMethod.Post))
{

<h2 class="center">Claim By Payer</h2>

    <div class="row">
        <div class="center">
            @Html.ValidationMessageFor(model => model.PayerId)
            <h4>Please enter a payer number : @Html.TextBoxFor(m => m.PayerId)
                &nbsp;&nbsp;&nbsp;&nbsp;
            Start Date @Html.Kendo().DatePicker().Name("StartDt").Value(Model.StartDt).Format("MM/dd/yyyy") &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            End Date @Html.Kendo().DatePicker().Name("EndDt").Value(Model.EndDt).Format("MM/dd/yyyy") </h4> 
            <br />
            NPCode1 @Html.TextBoxFor(m=>m.NPcode)  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; All NPCodes1 @Html.CheckBoxFor(m=>m.allNPcode) &nbsp;&nbsp; 
            <h4 style="color:red">To filter out the one particular NPcode1 , please uncheck the all Npcode1 checkbox.</h4>
            
           <br />
            <button class="btn btn-primary btn-large" type="submit" style="width: 300px; margin: 0 auto">Submit</button>
        </div>

    </div>
    if (Model != null && Model.PayerId != null)
    {
        <hr />
     

<div class="center">


    @(Html.Kendo().Grid<USPS_Report.Areas.Reports.Models.ClaimVM>()
                .Name("PAnoNeeded")
                .Columns(columns =>
                {
                    columns.Bound(t => t.ID_Claim).Title("ID Claim");
                    columns.Bound(t => t.ID_Payer).Title("ID Payer");
                    columns.Bound(t => t.Acct).Title("Account");
                    columns.Bound(t => t.First_Name).Title("First Name");
                    columns.Bound(t => t.Last_Name).Title("Last Name");
                    columns.Bound(t => t.ID_Bill).Title("ID Bill");
                    columns.Bound(t => t.DOS).Title("DOS").Format("{0:MM/dd/yyyy}");
                    columns.Bound(t => t.HCPC).Title("HCPC");
                    columns.Bound(t => t.ClaimBalance).Title("Claim Bal");
                    columns.Bound(t => t.AllowableAmt).Title("AllowableAmt");
                    columns.Bound(t => t.PaymentAmt).Title("PaymentAmt");
                    columns.Bound(t => t.Policy_Number).Title("Policy Number");
                    columns.Bound(t => t.lastClaimDt).Title("LastClaimDate").Format("{0:MM/dd/yyyy}");
                    columns.Bound(t => t.DateChanged).Title("ClaimsBillableDate").Format("{0:MM/dd/yyyy}");
                    columns.Bound(t => t.RespDate).Title("RespDate").Format("{0:MM/dd/yyyy}");
                    columns.Bound(t => t.NPCode1).Title("NP Code1");
                    columns.Bound(t => t.NPDesc1).Title("NP Desc1");
                    columns.Bound(t => t.NPCode2).Title("NP Code2");
                    columns.Bound(t => t.NPDesc2).Title("NP Desc2");
                    columns.Bound(t => t.NPCode3).Title("NP Code3");
                    columns.Bound(t => t.NPDesc3).Title("NP Desc3");
                    columns.Bound(t => t.NPCode4).Title("NP Code4");
                    columns.Bound(t => t.NPDesc4).Title("NP Desc4");
                    columns.Bound(t => t.DocNum).Title("Document Num");




                    //   columns.Bound(t => t.cId).Width(60).Title("Update").ClientTemplate("<a href='" + Url.RouteUrl("Default", new { controller = "Action", action = "NewCustomerGrid_Update" }) + "?rec=#= cId #'>Update</a>");
                    //columns.Command(command =>
                    //{
                    //    command.Destroy().Text("Remove");

                    //}).Width(120);
                })
                       .ToolBar(tools => tools.Excel())
                .Sortable()
                 .Pageable()
                     .Filterable(ftb => ftb.Mode(GridFilterMode.Menu))
                   .Excel(excel => excel
                        .FileName("ClaimsByPayer.xlsx")
                        .AllPages(true)
                        .Filterable(true)
                        .ProxyURL(Url.Action("Excel_Export_Save", "Billing"))
                    )
               .HtmlAttributes(new { style = "width:3000px;" })
                    .Reorderable(r => r.Columns(true))
                    .Resizable(r => r.Columns(true))
                    .ColumnMenu()
                .DataSource(dataSource => dataSource
                    .Ajax()
                     .PageSize(200)
                     .ServerOperation(false)
                    .Model(model => model.Id(p => p.ID_Claim))
                    .Read(read => read.Action("ClaimNeeded", "Billing", new { PayerID = Model.PayerId, StartDt = Model.StartDt, EndDt = Model.EndDt, NPcode = Model.NPcode, allNPcode = Model.allNPcode}))
                //.Destroy(update => update.Action("PANotNeeded_Destroy", "CustomerService"))


                )
    )


</div>
    }

}
<style>
    .center {
        text-align:center;

    }

     .outer {
        width: 100%;
        color: navy;
        background-color: lightblue;
        /*border: 2px solid blue;*/
        padding: 5px;
    }

    .c {
        text-align: center;
    }
    .text-field{
    background-color:#FFFFCC;
    color : #FF0000;
    width : 60px;
   font-size:large;
    }

    .field-validation-error
{
color: #ff0000;
}
.field-validation-valid
{
display: none;
}
.input-validation-error
{
border: 1px solid #ff0000;
background-color: #ffeeee;
}
.validation-summary-errors
{
font-weight: bold;
color: #ff0000;
}
.validation-summary-valid
{
display: none;
}
</style>

