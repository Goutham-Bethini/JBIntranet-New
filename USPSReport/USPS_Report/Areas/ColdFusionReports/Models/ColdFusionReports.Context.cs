//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace USPS_Report.Areas.ColdFusionReports.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ColdFusionReportsEntities : DbContext
    {
        public ColdFusionReportsEntities()
            : base("name=ColdFusionReportsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<sp_GetAcRWOs_Result> sp_GetAcRWOs(Nullable<int> acNumber)
        {
            var acNumberParameter = acNumber.HasValue ?
                new ObjectParameter("AcNumber", acNumber) :
                new ObjectParameter("AcNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAcRWOs_Result>("sp_GetAcRWOs", acNumberParameter);
        }
    
        public virtual ObjectResult<sp_GetAcChanges_Result> sp_GetAcChanges(Nullable<int> acNumber)
        {
            var acNumberParameter = acNumber.HasValue ?
                new ObjectParameter("AcNumber", acNumber) :
                new ObjectParameter("AcNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAcChanges_Result>("sp_GetAcChanges", acNumberParameter);
        }
    
        public virtual ObjectResult<sp_GetDoctorInfo_Result> sp_GetDoctorInfo(Nullable<int> doctorID)
        {
            var doctorIDParameter = doctorID.HasValue ?
                new ObjectParameter("doctorID", doctorID) :
                new ObjectParameter("doctorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDoctorInfo_Result>("sp_GetDoctorInfo", doctorIDParameter);
        }
    
        public virtual ObjectResult<sp_CallTagSearch_Result> sp_CallTagSearch(string searchType, Nullable<int> searchValue)
        {
            var searchTypeParameter = searchType != null ?
                new ObjectParameter("searchType", searchType) :
                new ObjectParameter("searchType", typeof(string));
    
            var searchValueParameter = searchValue.HasValue ?
                new ObjectParameter("searchValue", searchValue) :
                new ObjectParameter("searchValue", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CallTagSearch_Result>("sp_CallTagSearch", searchTypeParameter, searchValueParameter);
        }
    
        public virtual ObjectResult<sp_GetNewExpiringCMNs_Result> sp_GetNewExpiringCMNs(Nullable<int> expMonth, Nullable<int> expYear)
        {
            var expMonthParameter = expMonth.HasValue ?
                new ObjectParameter("ExpMonth", expMonth) :
                new ObjectParameter("ExpMonth", typeof(int));
    
            var expYearParameter = expYear.HasValue ?
                new ObjectParameter("ExpYear", expYear) :
                new ObjectParameter("ExpYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetNewExpiringCMNs_Result>("sp_GetNewExpiringCMNs", expMonthParameter, expYearParameter);
        }
    
        public virtual ObjectResult<sp_GetQOH_Result> sp_GetQOH(string productCode)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("productCode", productCode) :
                new ObjectParameter("productCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetQOH_Result>("sp_GetQOH", productCodeParameter);
        }
    
        public virtual ObjectResult<sp_ussOperatorLookup_Result> sp_ussOperatorLookup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ussOperatorLookup_Result>("sp_ussOperatorLookup");
        }
    
        public virtual ObjectResult<sp_CMNreportMonthsWise_Result> sp_CMNreportMonthsWise(Nullable<int> selectedYear, string repName)
        {
            var selectedYearParameter = selectedYear.HasValue ?
                new ObjectParameter("selectedYear", selectedYear) :
                new ObjectParameter("selectedYear", typeof(int));
    
            var repNameParameter = repName != null ?
                new ObjectParameter("repName", repName) :
                new ObjectParameter("repName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CMNreportMonthsWise_Result>("sp_CMNreportMonthsWise", selectedYearParameter, repNameParameter);
        }
    
        public virtual ObjectResult<sp_GetCMNs_ReportData_Result> sp_GetCMNs_ReportData(Nullable<int> selectedYear, Nullable<int> selectedMonth, string repName, string recert)
        {
            var selectedYearParameter = selectedYear.HasValue ?
                new ObjectParameter("selectedYear", selectedYear) :
                new ObjectParameter("selectedYear", typeof(int));
    
            var selectedMonthParameter = selectedMonth.HasValue ?
                new ObjectParameter("selectedMonth", selectedMonth) :
                new ObjectParameter("selectedMonth", typeof(int));
    
            var repNameParameter = repName != null ?
                new ObjectParameter("repName", repName) :
                new ObjectParameter("repName", typeof(string));
    
            var recertParameter = recert != null ?
                new ObjectParameter("recert", recert) :
                new ObjectParameter("recert", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCMNs_ReportData_Result>("sp_GetCMNs_ReportData", selectedYearParameter, selectedMonthParameter, repNameParameter, recertParameter);
        }
    
        public virtual ObjectResult<sp_GetDeptEmployees_Result> sp_GetDeptEmployees(Nullable<int> deptId)
        {
            var deptIdParameter = deptId.HasValue ?
                new ObjectParameter("deptId", deptId) :
                new ObjectParameter("deptId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDeptEmployees_Result>("sp_GetDeptEmployees", deptIdParameter);
        }
    
        public virtual ObjectResult<sp_GetCMNreports_Result> sp_GetCMNreports()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCMNreports_Result>("sp_GetCMNreports");
        }
    
        public virtual ObjectResult<sp_GetReportRules_Result> sp_GetReportRules(Nullable<int> reportId)
        {
            var reportIdParameter = reportId.HasValue ?
                new ObjectParameter("reportId", reportId) :
                new ObjectParameter("reportId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetReportRules_Result>("sp_GetReportRules", reportIdParameter);
        }
    
        public virtual ObjectResult<sp_GetPayers_Result> sp_GetPayers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetPayers_Result>("sp_GetPayers");
        }
    
        public virtual ObjectResult<sp_GetPayerTypes_Result> sp_GetPayerTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetPayerTypes_Result>("sp_GetPayerTypes");
        }
    
        public virtual ObjectResult<sp_GetDocTypes_Result> sp_GetDocTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetDocTypes_Result>("sp_GetDocTypes");
        }
    
        public virtual ObjectResult<sp_GetProviders_Result> sp_GetProviders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetProviders_Result>("sp_GetProviders");
        }
    
        public virtual ObjectResult<sp_GetCategories_Result> sp_GetCategories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetCategories_Result>("sp_GetCategories");
        }
    
        public virtual ObjectResult<sp_GetStatusCodes_Result> sp_GetStatusCodes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetStatusCodes_Result>("sp_GetStatusCodes");
        }
    }
}
