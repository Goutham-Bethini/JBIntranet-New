//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace USPS_Report.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ReportsEntities : DbContext
    {
        public ReportsEntities()
            : base("name=ReportsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<FedEx_POD_tbl> FedEx_POD_tbl { get; set; }
        public virtual DbSet<FedEx_Tracking_Tbl> FedEx_Tracking_Tbl { get; set; }
        public virtual DbSet<USPS_POD_tbl> USPS_POD_tbl { get; set; }
        public virtual DbSet<v_FutureOrderTypes> v_FutureOrderTypes { get; set; }
        public virtual DbSet<v_FutureOrderTypes2> v_FutureOrderTypes2 { get; set; }
        public virtual DbSet<DetailedSP> DetailedSPs { get; set; }
        public virtual DbSet<AOBAttempt> AOBAttempts { get; set; }

        public virtual DbSet<BarCodeAttempt> BarCodeAttempts { get; set; }
    
        public virtual ObjectResult<sp_RWO_Lookup_Result> sp_RWO_Lookup(string productCode, Nullable<int> holdCode, Nullable<System.DateTime> startDt, Nullable<System.DateTime> endDt, string payerID, Nullable<int> locationID, Nullable<int> methodID, Nullable<int> inactive, Nullable<int> delTimeID, string ferqID, Nullable<int> isAssigned, Nullable<int> makeRWOInComplete, Nullable<int> serviceTypeId, string hCPCCode)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var holdCodeParameter = holdCode.HasValue ?
                new ObjectParameter("HoldCode", holdCode) :
                new ObjectParameter("HoldCode", typeof(int));
    
            var startDtParameter = startDt.HasValue ?
                new ObjectParameter("startDt", startDt) :
                new ObjectParameter("startDt", typeof(System.DateTime));
    
            var endDtParameter = endDt.HasValue ?
                new ObjectParameter("endDt", endDt) :
                new ObjectParameter("endDt", typeof(System.DateTime));
    
            var payerIDParameter = payerID != null ?
                new ObjectParameter("PayerID", payerID) :
                new ObjectParameter("PayerID", typeof(string));
    
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("locationID", locationID) :
                new ObjectParameter("locationID", typeof(int));
    
            var methodIDParameter = methodID.HasValue ?
                new ObjectParameter("MethodID", methodID) :
                new ObjectParameter("MethodID", typeof(int));
    
            var inactiveParameter = inactive.HasValue ?
                new ObjectParameter("Inactive", inactive) :
                new ObjectParameter("Inactive", typeof(int));
    
            var delTimeIDParameter = delTimeID.HasValue ?
                new ObjectParameter("DelTimeID", delTimeID) :
                new ObjectParameter("DelTimeID", typeof(int));
    
            var ferqIDParameter = ferqID != null ?
                new ObjectParameter("FerqID", ferqID) :
                new ObjectParameter("FerqID", typeof(string));
    
            var isAssignedParameter = isAssigned.HasValue ?
                new ObjectParameter("IsAssigned", isAssigned) :
                new ObjectParameter("IsAssigned", typeof(int));
    
            var makeRWOInCompleteParameter = makeRWOInComplete.HasValue ?
                new ObjectParameter("MakeRWOInComplete", makeRWOInComplete) :
                new ObjectParameter("MakeRWOInComplete", typeof(int));
    
            var serviceTypeIdParameter = serviceTypeId.HasValue ?
                new ObjectParameter("ServiceTypeId", serviceTypeId) :
                new ObjectParameter("ServiceTypeId", typeof(int));
    
            var hCPCCodeParameter = hCPCCode != null ?
                new ObjectParameter("HCPCCode", hCPCCode) :
                new ObjectParameter("HCPCCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RWO_Lookup_Result>("sp_RWO_Lookup", productCodeParameter, holdCodeParameter, startDtParameter, endDtParameter, payerIDParameter, locationIDParameter, methodIDParameter, inactiveParameter, delTimeIDParameter, ferqIDParameter, isAssignedParameter, makeRWOInCompleteParameter, serviceTypeIdParameter, hCPCCodeParameter);
        }
    
        public virtual ObjectResult<sp_EligibilitySearch_Result> sp_EligibilitySearch(Nullable<int> claim, Nullable<int> workOrder, Nullable<int> account, Nullable<System.DateTime> dOS)
        {
            var claimParameter = claim.HasValue ?
                new ObjectParameter("Claim", claim) :
                new ObjectParameter("Claim", typeof(int));
    
            var workOrderParameter = workOrder.HasValue ?
                new ObjectParameter("WorkOrder", workOrder) :
                new ObjectParameter("WorkOrder", typeof(int));
    
            var accountParameter = account.HasValue ?
                new ObjectParameter("Account", account) :
                new ObjectParameter("Account", typeof(int));
    
            var dOSParameter = dOS.HasValue ?
                new ObjectParameter("DOS", dOS) :
                new ObjectParameter("DOS", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EligibilitySearch_Result>("sp_EligibilitySearch", claimParameter, workOrderParameter, accountParameter, dOSParameter);
        }
    
        public virtual ObjectResult<sp_RWO_LookupWithDates_Result> sp_RWO_LookupWithDates(string productCode, Nullable<int> holdCode, Nullable<System.DateTime> startDt, Nullable<System.DateTime> endDt, string payerID, Nullable<int> locationID, Nullable<int> methodID, Nullable<int> inactive, Nullable<int> delTimeID, string ferqID, Nullable<int> isAssigned, Nullable<int> makeRWOInComplete, Nullable<int> serviceTypeId, string hCPCCode)
        {
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var holdCodeParameter = holdCode.HasValue ?
                new ObjectParameter("HoldCode", holdCode) :
                new ObjectParameter("HoldCode", typeof(int));
    
            var startDtParameter = startDt.HasValue ?
                new ObjectParameter("startDt", startDt) :
                new ObjectParameter("startDt", typeof(System.DateTime));
    
            var endDtParameter = endDt.HasValue ?
                new ObjectParameter("endDt", endDt) :
                new ObjectParameter("endDt", typeof(System.DateTime));
    
            var payerIDParameter = payerID != null ?
                new ObjectParameter("PayerID", payerID) :
                new ObjectParameter("PayerID", typeof(string));
    
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("locationID", locationID) :
                new ObjectParameter("locationID", typeof(int));
    
            var methodIDParameter = methodID.HasValue ?
                new ObjectParameter("MethodID", methodID) :
                new ObjectParameter("MethodID", typeof(int));
    
            var inactiveParameter = inactive.HasValue ?
                new ObjectParameter("Inactive", inactive) :
                new ObjectParameter("Inactive", typeof(int));
    
            var delTimeIDParameter = delTimeID.HasValue ?
                new ObjectParameter("DelTimeID", delTimeID) :
                new ObjectParameter("DelTimeID", typeof(int));
    
            var ferqIDParameter = ferqID != null ?
                new ObjectParameter("FerqID", ferqID) :
                new ObjectParameter("FerqID", typeof(string));
    
            var isAssignedParameter = isAssigned.HasValue ?
                new ObjectParameter("IsAssigned", isAssigned) :
                new ObjectParameter("IsAssigned", typeof(int));
    
            var makeRWOInCompleteParameter = makeRWOInComplete.HasValue ?
                new ObjectParameter("MakeRWOInComplete", makeRWOInComplete) :
                new ObjectParameter("MakeRWOInComplete", typeof(int));
    
            var serviceTypeIdParameter = serviceTypeId.HasValue ?
                new ObjectParameter("ServiceTypeId", serviceTypeId) :
                new ObjectParameter("ServiceTypeId", typeof(int));
    
            var hCPCCodeParameter = hCPCCode != null ?
                new ObjectParameter("HCPCCode", hCPCCode) :
                new ObjectParameter("HCPCCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RWO_LookupWithDates_Result>("sp_RWO_LookupWithDates", productCodeParameter, holdCodeParameter, startDtParameter, endDtParameter, payerIDParameter, locationIDParameter, methodIDParameter, inactiveParameter, delTimeIDParameter, ferqIDParameter, isAssignedParameter, makeRWOInCompleteParameter, serviceTypeIdParameter, hCPCCodeParameter);
        }
    
        public virtual int GetWoHolds(string insuranceType)
        {
            var insuranceTypeParameter = insuranceType != null ?
                new ObjectParameter("InsuranceType", insuranceType) :
                new ObjectParameter("InsuranceType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetWoHolds", insuranceTypeParameter);
        }
    
        public virtual ObjectResult<sp_GetMIDeactivatedAccounts_Result> sp_GetMIDeactivatedAccounts(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetMIDeactivatedAccounts_Result>("sp_GetMIDeactivatedAccounts", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<sp_GetMINewAccounts_Result> sp_GetMINewAccounts(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetMINewAccounts_Result>("sp_GetMINewAccounts", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<sp_GetMIPRODUCTSADDED_Result> sp_GetMIPRODUCTSADDED(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetMIPRODUCTSADDED_Result>("sp_GetMIPRODUCTSADDED", startDateParameter, endDateParameter);
        }
    
        public virtual int sp_InsertStateAuditReports(string sarReport, Nullable<int> sarQuarter, Nullable<double> sarYear, string sarFileName)
        {
            var sarReportParameter = sarReport != null ?
                new ObjectParameter("sarReport", sarReport) :
                new ObjectParameter("sarReport", typeof(string));
    
            var sarQuarterParameter = sarQuarter.HasValue ?
                new ObjectParameter("sarQuarter", sarQuarter) :
                new ObjectParameter("sarQuarter", typeof(int));
    
            var sarYearParameter = sarYear.HasValue ?
                new ObjectParameter("sarYear", sarYear) :
                new ObjectParameter("sarYear", typeof(double));
    
            var sarFileNameParameter = sarFileName != null ?
                new ObjectParameter("sarFileName", sarFileName) :
                new ObjectParameter("sarFileName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertStateAuditReports", sarReportParameter, sarQuarterParameter, sarYearParameter, sarFileNameParameter);
        }
    
        public virtual ObjectResult<sp_MIStateAuditData_Result> sp_MIStateAuditData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MIStateAuditData_Result>("sp_MIStateAuditData");
        }
    
        public virtual int sp_CancelOrders(string list, string cancel_note, string operatorName)
        {
            var listParameter = list != null ?
                new ObjectParameter("list", list) :
                new ObjectParameter("list", typeof(string));
    
            var cancel_noteParameter = cancel_note != null ?
                new ObjectParameter("cancel_note", cancel_note) :
                new ObjectParameter("cancel_note", typeof(string));
    
            var operatorNameParameter = operatorName != null ?
                new ObjectParameter("OperatorName", operatorName) :
                new ObjectParameter("OperatorName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CancelOrders", listParameter, cancel_noteParameter, operatorNameParameter);
        }
    
        public virtual int sp_MassReleaseOrders(string workOrderIds, string operatorName)
        {
            var workOrderIdsParameter = workOrderIds != null ?
                new ObjectParameter("WorkOrderIds", workOrderIds) :
                new ObjectParameter("WorkOrderIds", typeof(string));
    
            var operatorNameParameter = operatorName != null ?
                new ObjectParameter("OperatorName", operatorName) :
                new ObjectParameter("OperatorName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_MassReleaseOrders", workOrderIdsParameter, operatorNameParameter);
        }
    
        public virtual int sp_UnCancelOrders(string list)
        {
            var listParameter = list != null ?
                new ObjectParameter("list", list) :
                new ObjectParameter("list", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UnCancelOrders", listParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_DoesReturnExist(Nullable<int> workOrder_ID)
        {
            var workOrder_IDParameter = workOrder_ID.HasValue ?
                new ObjectParameter("workOrder_ID", workOrder_ID) :
                new ObjectParameter("workOrder_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_DoesReturnExist", workOrder_IDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_DoesReturnLineExist(Nullable<int> return_ID, Nullable<int> workOrder_Line_ID)
        {
            var return_IDParameter = return_ID.HasValue ?
                new ObjectParameter("return_ID", return_ID) :
                new ObjectParameter("return_ID", typeof(int));
    
            var workOrder_Line_IDParameter = workOrder_Line_ID.HasValue ?
                new ObjectParameter("workOrder_Line_ID", workOrder_Line_ID) :
                new ObjectParameter("workOrder_Line_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_DoesReturnLineExist", return_IDParameter, workOrder_Line_IDParameter);
        }
    
        public virtual ObjectResult<sp_GetReturnItem_Result> sp_GetReturnItem(Nullable<int> returnId)
        {
            var returnIdParameter = returnId.HasValue ?
                new ObjectParameter("returnId", returnId) :
                new ObjectParameter("returnId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetReturnItem_Result>("sp_GetReturnItem", returnIdParameter);
        }
    
        public virtual ObjectResult<sp_GetReturnItemsData_Result> sp_GetReturnItemsData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetReturnItemsData_Result>("sp_GetReturnItemsData");
        }
    
        public virtual ObjectResult<sp_GetReturnLineItems_Result> sp_GetReturnLineItems(Nullable<int> returnId)
        {
            var returnIdParameter = returnId.HasValue ?
                new ObjectParameter("returnId", returnId) :
                new ObjectParameter("returnId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetReturnLineItems_Result>("sp_GetReturnLineItems", returnIdParameter);
        }
    
        public virtual ObjectResult<sp_GetReturnReasonList_Result> sp_GetReturnReasonList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetReturnReasonList_Result>("sp_GetReturnReasonList");
        }
    
        public virtual ObjectResult<sp_GetSearchAccounts_Result> sp_GetSearchAccounts(Nullable<int> account, string firstName, string lastName, string address1, string address2, string city, string state, string zipCode)
        {
            var accountParameter = account.HasValue ?
                new ObjectParameter("account", account) :
                new ObjectParameter("account", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("address1", address1) :
                new ObjectParameter("address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("address2", address2) :
                new ObjectParameter("address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("zipCode", zipCode) :
                new ObjectParameter("zipCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetSearchAccounts_Result>("sp_GetSearchAccounts", accountParameter, firstNameParameter, lastNameParameter, address1Parameter, address2Parameter, cityParameter, stateParameter, zipCodeParameter);
        }
    
        public virtual ObjectResult<sp_GetWorkOrderInfo_Result> sp_GetWorkOrderInfo(Nullable<int> account, Nullable<int> workOrder_ID)
        {
            var accountParameter = account.HasValue ?
                new ObjectParameter("account", account) :
                new ObjectParameter("account", typeof(int));
    
            var workOrder_IDParameter = workOrder_ID.HasValue ?
                new ObjectParameter("workOrder_ID", workOrder_ID) :
                new ObjectParameter("workOrder_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetWorkOrderInfo_Result>("sp_GetWorkOrderInfo", accountParameter, workOrder_IDParameter);
        }
    
        public virtual ObjectResult<sp_GetWorkOrders_Result> sp_GetWorkOrders(Nullable<int> account)
        {
            var accountParameter = account.HasValue ?
                new ObjectParameter("account", account) :
                new ObjectParameter("account", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetWorkOrders_Result>("sp_GetWorkOrders", accountParameter);
        }
    
        public virtual int sp_InsertAccountNote(Nullable<int> account, string userName, Nullable<int> workOrder_ID, string note, Nullable<int> reason__List_Option_ID, string return_Other_Reason, string tracking_Number)
        {
            var accountParameter = account.HasValue ?
                new ObjectParameter("account", account) :
                new ObjectParameter("account", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var workOrder_IDParameter = workOrder_ID.HasValue ?
                new ObjectParameter("workOrder_ID", workOrder_ID) :
                new ObjectParameter("workOrder_ID", typeof(int));
    
            var noteParameter = note != null ?
                new ObjectParameter("note", note) :
                new ObjectParameter("note", typeof(string));
    
            var reason__List_Option_IDParameter = reason__List_Option_ID.HasValue ?
                new ObjectParameter("reason__List_Option_ID", reason__List_Option_ID) :
                new ObjectParameter("reason__List_Option_ID", typeof(int));
    
            var return_Other_ReasonParameter = return_Other_Reason != null ?
                new ObjectParameter("return_Other_Reason", return_Other_Reason) :
                new ObjectParameter("return_Other_Reason", typeof(string));
    
            var tracking_NumberParameter = tracking_Number != null ?
                new ObjectParameter("tracking_Number", tracking_Number) :
                new ObjectParameter("tracking_Number", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertAccountNote", accountParameter, userNameParameter, workOrder_IDParameter, noteParameter, reason__List_Option_IDParameter, return_Other_ReasonParameter, tracking_NumberParameter);
        }
    
        public virtual int sp_InsertReturn(Nullable<int> account, Nullable<int> workOrder_ID, string reshipped, string tracking_Number, string return_Note, string tag_Type, Nullable<int> reason__List_option_ID, string return_Other_Reason, Nullable<int> boxesReturned, Nullable<System.DateTime> dateRtrn, Nullable<short> send_To_Billing, Nullable<short> dont_Display, Nullable<int> oracleRMA)
        {
            var accountParameter = account.HasValue ?
                new ObjectParameter("account", account) :
                new ObjectParameter("account", typeof(int));
    
            var workOrder_IDParameter = workOrder_ID.HasValue ?
                new ObjectParameter("workOrder_ID", workOrder_ID) :
                new ObjectParameter("workOrder_ID", typeof(int));
    
            var reshippedParameter = reshipped != null ?
                new ObjectParameter("reshipped", reshipped) :
                new ObjectParameter("reshipped", typeof(string));
    
            var tracking_NumberParameter = tracking_Number != null ?
                new ObjectParameter("tracking_Number", tracking_Number) :
                new ObjectParameter("tracking_Number", typeof(string));
    
            var return_NoteParameter = return_Note != null ?
                new ObjectParameter("return_Note", return_Note) :
                new ObjectParameter("return_Note", typeof(string));
    
            var tag_TypeParameter = tag_Type != null ?
                new ObjectParameter("tag_Type", tag_Type) :
                new ObjectParameter("tag_Type", typeof(string));
    
            var reason__List_option_IDParameter = reason__List_option_ID.HasValue ?
                new ObjectParameter("reason__List_option_ID", reason__List_option_ID) :
                new ObjectParameter("reason__List_option_ID", typeof(int));
    
            var return_Other_ReasonParameter = return_Other_Reason != null ?
                new ObjectParameter("return_Other_Reason", return_Other_Reason) :
                new ObjectParameter("return_Other_Reason", typeof(string));
    
            var boxesReturnedParameter = boxesReturned.HasValue ?
                new ObjectParameter("boxesReturned", boxesReturned) :
                new ObjectParameter("boxesReturned", typeof(int));
    
            var dateRtrnParameter = dateRtrn.HasValue ?
                new ObjectParameter("dateRtrn", dateRtrn) :
                new ObjectParameter("dateRtrn", typeof(System.DateTime));
    
            var send_To_BillingParameter = send_To_Billing.HasValue ?
                new ObjectParameter("send_To_Billing", send_To_Billing) :
                new ObjectParameter("send_To_Billing", typeof(short));
    
            var dont_DisplayParameter = dont_Display.HasValue ?
                new ObjectParameter("dont_Display", dont_Display) :
                new ObjectParameter("dont_Display", typeof(short));
    
            var oracleRMAParameter = oracleRMA.HasValue ?
                new ObjectParameter("oracleRMA", oracleRMA) :
                new ObjectParameter("oracleRMA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertReturn", accountParameter, workOrder_IDParameter, reshippedParameter, tracking_NumberParameter, return_NoteParameter, tag_TypeParameter, reason__List_option_IDParameter, return_Other_ReasonParameter, boxesReturnedParameter, dateRtrnParameter, send_To_BillingParameter, dont_DisplayParameter, oracleRMAParameter);
        }
    
        public virtual int sp_InsertReturn_Line(Nullable<int> return_ID, Nullable<int> workOrder_Line_ID, Nullable<int> qty_Return)
        {
            var return_IDParameter = return_ID.HasValue ?
                new ObjectParameter("return_ID", return_ID) :
                new ObjectParameter("return_ID", typeof(int));
    
            var workOrder_Line_IDParameter = workOrder_Line_ID.HasValue ?
                new ObjectParameter("workOrder_Line_ID", workOrder_Line_ID) :
                new ObjectParameter("workOrder_Line_ID", typeof(int));
    
            var qty_ReturnParameter = qty_Return.HasValue ?
                new ObjectParameter("qty_Return", qty_Return) :
                new ObjectParameter("qty_Return", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertReturn_Line", return_IDParameter, workOrder_Line_IDParameter, qty_ReturnParameter);
        }
    
        public virtual int sp_UpdateReturn(Nullable<int> return_ID, string reshipped, string tracking_Number, string return_Note, string tag_Type, Nullable<int> reason__List_option_ID, string return_Other_Reason, Nullable<int> boxesReturned, Nullable<System.DateTime> dateRtrn, Nullable<short> send_To_Billing, Nullable<short> dont_Display, Nullable<int> oracleRMA)
        {
            var return_IDParameter = return_ID.HasValue ?
                new ObjectParameter("return_ID", return_ID) :
                new ObjectParameter("return_ID", typeof(int));
    
            var reshippedParameter = reshipped != null ?
                new ObjectParameter("reshipped", reshipped) :
                new ObjectParameter("reshipped", typeof(string));
    
            var tracking_NumberParameter = tracking_Number != null ?
                new ObjectParameter("tracking_Number", tracking_Number) :
                new ObjectParameter("tracking_Number", typeof(string));
    
            var return_NoteParameter = return_Note != null ?
                new ObjectParameter("return_Note", return_Note) :
                new ObjectParameter("return_Note", typeof(string));
    
            var tag_TypeParameter = tag_Type != null ?
                new ObjectParameter("tag_Type", tag_Type) :
                new ObjectParameter("tag_Type", typeof(string));
    
            var reason__List_option_IDParameter = reason__List_option_ID.HasValue ?
                new ObjectParameter("reason__List_option_ID", reason__List_option_ID) :
                new ObjectParameter("reason__List_option_ID", typeof(int));
    
            var return_Other_ReasonParameter = return_Other_Reason != null ?
                new ObjectParameter("return_Other_Reason", return_Other_Reason) :
                new ObjectParameter("return_Other_Reason", typeof(string));
    
            var boxesReturnedParameter = boxesReturned.HasValue ?
                new ObjectParameter("boxesReturned", boxesReturned) :
                new ObjectParameter("boxesReturned", typeof(int));
    
            var dateRtrnParameter = dateRtrn.HasValue ?
                new ObjectParameter("dateRtrn", dateRtrn) :
                new ObjectParameter("dateRtrn", typeof(System.DateTime));
    
            var send_To_BillingParameter = send_To_Billing.HasValue ?
                new ObjectParameter("send_To_Billing", send_To_Billing) :
                new ObjectParameter("send_To_Billing", typeof(short));
    
            var dont_DisplayParameter = dont_Display.HasValue ?
                new ObjectParameter("dont_Display", dont_Display) :
                new ObjectParameter("dont_Display", typeof(short));
    
            var oracleRMAParameter = oracleRMA.HasValue ?
                new ObjectParameter("oracleRMA", oracleRMA) :
                new ObjectParameter("oracleRMA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateReturn", return_IDParameter, reshippedParameter, tracking_NumberParameter, return_NoteParameter, tag_TypeParameter, reason__List_option_IDParameter, return_Other_ReasonParameter, boxesReturnedParameter, dateRtrnParameter, send_To_BillingParameter, dont_DisplayParameter, oracleRMAParameter);
        }
    
        public virtual int sp_UpdateReturn_Line(Nullable<int> return_Line_ID, Nullable<int> qty_Return)
        {
            var return_Line_IDParameter = return_Line_ID.HasValue ?
                new ObjectParameter("return_Line_ID", return_Line_ID) :
                new ObjectParameter("return_Line_ID", typeof(int));
    
            var qty_ReturnParameter = qty_Return.HasValue ?
                new ObjectParameter("qty_Return", qty_Return) :
                new ObjectParameter("qty_Return", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateReturn_Line", return_Line_IDParameter, qty_ReturnParameter);
        }
    }
}
